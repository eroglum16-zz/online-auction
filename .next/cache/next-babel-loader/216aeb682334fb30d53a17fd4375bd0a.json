{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/components/ChatBox.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport 'react-chat-elements/dist/main.css';\nimport { MessageList, Input, Button } from 'react-chat-elements';\nimport { serverUrl } from '../api-config';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nconst socket = socketIOClient(serverUrl);\n\nclass ChatBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      messages: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n    this.handleSendClick = this.handleSendClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMessages();\n\n    if (this.props.saleId) {\n      socket.on('new message on ' + this.props.saleId, msg => {\n        if (msg.receiverEmail === this.props.userEmail) this.getMessages();\n      });\n    }\n\n    let counter = 0;\n\n    if (this.state.messages.length === 0) {\n      let intervalId;\n      intervalId = setInterval(() => {\n        this.getMessages();\n\n        if (this.state.messages.length !== 0) {\n          clearInterval(intervalId);\n        }\n\n        counter++;\n        console.log(counter);\n      }, 500);\n    }\n\n    if (!this.props.saleId) {\n      let intervalId;\n      intervalId = setInterval(() => {\n        if (this.props.saleId) {\n          cl;\n        }\n      }), 500;\n    }\n    /*\n    socket.on('new message on ' + this.props.saleId, (msg) => {\n        if(msg.receiverEmail === this.props.userEmail)\n            this.getMessages();\n    });\n    */\n\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      message: value\n    });\n  }\n\n  handleEnter(event) {\n    if (event.key === 'Enter') {\n      this.sendMessage();\n    }\n  }\n\n  handleSendClick() {\n    this.sendMessage();\n  }\n\n  sendMessage() {\n    const url = serverUrl + '/message/new';\n    axios.post(url, {\n      text: this.state.message,\n      receiverEmail: this.props.receiverEmail,\n      saleId: this.props.saleId\n    }, {\n      headers: {\n        authorization: this.props.userToken\n      }\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: ''\n      });\n      socket.emit('new message', {\n        relatedSale: this.props.saleId,\n        receiverEmail: this.props.receiverEmail\n      });\n      this.refs.message.clear();\n      this.getMessages();\n    }).catch(error => {\n      throw error;\n    });\n  }\n\n  getMessages() {\n    console.log(\"Sale ID: \" + this.props.saleId);\n    console.log(\"Token: \" + this.props.userToken);\n    const url = serverUrl + '/messages/' + this.props.saleId;\n    axios.post(url, {}, {\n      headers: {\n        authorization: this.props.userToken\n      }\n    }).then(response => {\n      this.setState({\n        messages: response.data.messages\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let dataSource = [];\n    let messages = this.state.messages;\n    let i;\n\n    for (i in messages) {\n      dataSource.push({\n        position: messages[i].receiverEmail === this.props.receiverEmail ? 'right' : 'left',\n        type: 'text',\n        className: 'mb-2',\n        text: messages[i].messageText,\n        date: messages[i].createdAt\n      });\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(CardHeader, {\n      className: \"bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.buyer, __jsx(\"span\", {\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" \", this.props.salePrice, \"\\u20BA \")), __jsx(CardBody, {\n      style: {\n        minHeight: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(MessageList, {\n      className: \"message-list\",\n      lockable: true,\n      toBottomHeight: '100%',\n      dataSource: dataSource,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), __jsx(CardFooter, {\n      className: \"bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, __jsx(Input, {\n      placeholder: \"Mesaj\\u0131n\\u0131z...\",\n      className: \"pl-2\",\n      multiline: false,\n      ref: \"message\",\n      value: this.state.message,\n      onChange: this.handleInputChange,\n      onKeyDown: this.handleEnter,\n      rightButtons: __jsx(Button, {\n        color: \"white\",\n        className: \"bg-dark col-2\",\n        onClick: this.handleSendClick,\n        text: __jsx(FontAwesomeIcon, {\n          icon: faPaperPlane,\n          width: \"16\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ChatBox;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/components/ChatBox.js"],"names":["React","Card","CardHeader","CardBody","CardFooter","FontAwesomeIcon","faPaperPlane","MessageList","Input","Button","serverUrl","axios","socketIOClient","socket","ChatBox","Component","constructor","props","state","message","messages","handleInputChange","bind","handleEnter","handleSendClick","componentDidMount","getMessages","saleId","on","msg","receiverEmail","userEmail","counter","length","intervalId","setInterval","clearInterval","console","log","cl","event","target","value","setState","key","sendMessage","url","post","text","headers","authorization","userToken","then","response","data","emit","relatedSale","refs","clear","catch","error","render","dataSource","i","push","position","type","className","messageText","date","createdAt","buyer","salePrice","minHeight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport { MessageList, Input, Button } from 'react-chat-elements';\nimport {serverUrl} from '../api-config';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\n\nconst socket = socketIOClient(serverUrl);\n\nclass ChatBox extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            messages: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.handleEnter        = this.handleEnter.bind(this);\n        this.handleSendClick    = this.handleSendClick.bind(this);\n    }\n    componentDidMount() {\n        this.getMessages();\n        if(this.props.saleId){\n            socket.on('new message on ' + this.props.saleId, (msg) => {\n                if(msg.receiverEmail === this.props.userEmail)\n                    this.getMessages();\n            });\n        }\n        let counter = 0;\n        if (this.state.messages.length === 0){\n            let intervalId;\n            intervalId = setInterval(() => {\n                this.getMessages();\n                if (this.state.messages.length !== 0){\n                    clearInterval(intervalId);\n                }\n                counter ++;\n                console.log(counter);\n            }, 500);\n        }\n        if (! this.props.saleId){\n            let intervalId;\n            intervalId = setInterval(() => {\n                if(this.props.saleId){\n                    cl\n            }\n            }), 500;\n        }\n        /*\n        socket.on('new message on ' + this.props.saleId, (msg) => {\n            if(msg.receiverEmail === this.props.userEmail)\n                this.getMessages();\n        });\n        */\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n\n        this.setState({\n            message: value,\n        });\n    }\n    handleEnter(event) {\n        if (event.key === 'Enter') {\n            this.sendMessage();\n        }\n    }\n    handleSendClick(){\n        this.sendMessage();\n    }\n    sendMessage(){\n        const url = serverUrl + '/message/new';\n        axios.post(url, {\n            text: this.state.message,\n            receiverEmail: this.props.receiverEmail,\n            saleId: this.props.saleId\n        },{\n            headers:{\n                authorization: this.props.userToken\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.setState({\n                message: ''\n            });\n            socket.emit('new message', {\n                relatedSale: this.props.saleId,\n                receiverEmail: this.props.receiverEmail\n            });\n            this.refs.message.clear();\n            this.getMessages();\n        }).catch((error) => {\n            throw error;\n        });\n    }\n    getMessages(){\n        console.log(\"Sale ID: \"+this.props.saleId);\n        console.log(\"Token: \"+this.props.userToken);\n        const url = serverUrl + '/messages/' + this.props.saleId;\n        axios.post(url, {}, {\n            headers:{\n                authorization: this.props.userToken\n            }\n        }).then((response) => {\n            this.setState({\n                messages: response.data.messages\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let dataSource = [];\n        let messages = this.state.messages;\n        let i;\n        for (i in messages){\n            dataSource.push({\n                position: messages[i].receiverEmail === this.props.receiverEmail ? 'right' : 'left',\n                type: 'text',\n                className: 'mb-2',\n                text: messages[i].messageText,\n                date: messages[i].createdAt\n            });\n        }\n        return (\n            <div>\n                <Card>\n                    <CardHeader className=\"bg-dark text-white\">\n                        {this.props.buyer}\n                        <span className=\"float-right\"> {this.props.salePrice}₺ </span>\n                    </CardHeader>\n                    <CardBody style={{minHeight: '400px'}}>\n                        <MessageList\n                            className='message-list'\n                            lockable={true}\n                            toBottomHeight={'100%'}\n                            dataSource={dataSource} />\n                    </CardBody>\n                    <CardFooter className=\"bg-light\">\n                        <Input\n                            placeholder=\"Mesajınız...\"\n                            className=\"pl-2\"\n                            multiline={false}\n                            ref=\"message\"\n                            value={this.state.message}\n                            onChange={this.handleInputChange}\n                            onKeyDown={this.handleEnter}\n                            rightButtons={\n                                <Button\n                                    color='white'\n                                    className='bg-dark col-2'\n                                    onClick={this.handleSendClick}\n                                    text={<FontAwesomeIcon icon={faPaperPlane} width=\"16\" />} />\n                            }/>\n                    </CardFooter>\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}