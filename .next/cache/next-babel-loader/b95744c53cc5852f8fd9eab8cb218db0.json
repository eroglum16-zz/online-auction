{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/pages/sell.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport { faCalendar, faLiraSign } from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport { auth } from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\n\nconst apiConfig = require('../api-config'); // Import React FilePond\n\n\nimport { FilePond, registerPlugin } from \"react-filepond\"; // Import FilePond styles\n\nimport \"filepond/dist/filepond.min.css\"; // Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\"; // Register the plugins\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", date => {\n      this.setState({\n        endDate: date\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      const url = apiConfig.serverUrl + '/sales/new';\n      event.preventDefault();\n      let filenames = [];\n\n      for (var i = 0; i < event.target.filepond.length; i++) {\n        filenames.push(event.target.filepond[i].value);\n      }\n\n      axios.post(url, {\n        title: this.state.title,\n        description: this.state.description,\n        state: this.state.state,\n        firstPrice: this.state.firstPrice,\n        endDate: this.state.endDate,\n        city: this.state.city,\n        district: this.state.district,\n        files: filenames\n      }, {\n        headers: {\n          authorization: this.state.token\n        }\n      }).then(response => {}).catch();\n    });\n\n    var token = this.props.token;\n    this.getUser(token);\n    this.state = {\n      loggedIn: token ? true : false,\n      user: {},\n      title: '',\n      description: '',\n      state: '',\n      firstPrice: '',\n      locations: [apiConfig.defaultCity],\n      endDate: new Date(),\n      selectedCity: apiConfig.defaultCity,\n      district: '',\n      city: '',\n      files: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateSelectedCity = this.updateSelectedCity.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n\n    if (name == \"city\") {\n      var selectedCity = this.state.locations.find(location => location.city === value);\n      this.updateSelectedCity(selectedCity);\n    }\n  }\n\n  updateSelectedCity(city) {\n    this.setState({\n      selectedCity: city\n    });\n  }\n\n  componentDidMount() {\n    this.getLocations();\n  }\n\n  getUser(token) {\n    const url = apiConfig.serverUrl + '/user/get';\n    axios.post(url, {}, {\n      headers: {\n        authorization: token\n      }\n    }).then(response => {\n      this.setState({\n        user: response.data.user\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getLocations() {\n    const apiConfig = require('../api-config');\n\n    const url = apiConfig.serverUrl + '/locations';\n    axios.get(url).then(response => {\n      this.setState({\n        locations: response.data.locations,\n        selectedCity: response.data.locations[0]\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }.bind(this));\n  }\n\n  render() {\n    const cities = this.state.locations.map(location => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, location.city));\n    var location;\n\n    for (location in this.state.locations) {\n      if (location.city === this.state.city) {\n        this.setState({\n          selectedCity: location\n        });\n      }\n    }\n\n    const districts = this.state.selectedCity.districts.map(district => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, district));\n    return __jsx(Layout, {\n      page: \"sell\",\n      user: this.state.user,\n      loggedIn: this.state.loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container bg-white\",\n      style: {\n        padding: '3%',\n        marginTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" Sat\\u0131\\u015F Ba\\u015Flat \"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Ba\\u015Fl\\u0131k\"), __jsx(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz\\xFC tan\\u0131mlayan birka\\xE7 kelime...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"A\\xE7\\u0131klama\"), __jsx(Input, {\n      type: \"textarea\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      rows: \"5\",\n      onChange: this.handleInputChange,\n      placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz hakk\\u0131nda a\\xE7\\u0131klamalar ve belirtmek istedi\\u011Finiz ekstra bilgiler.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Durum\"), __jsx(Input, {\n      type: \"select\",\n      name: \"state\",\n      id: \"state\",\n      value: this.state.state,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Durum se\\xE7in\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Kullan\\u0131lmam\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Yeni gibi\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Az kullan\\u0131lm\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Eski\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"\\xC7ok Eski\"))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"firstPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Ba\\u015Flang\\u0131\\xE7 Fiyat\\u0131\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faLiraSign,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }))), __jsx(Input, {\n      type: \"number\",\n      name: \"firstPrice\",\n      value: this.state.firstPrice,\n      onChange: this.handleInputChange,\n      id: \"firstPrice\",\n      placeholder: \"Minimum sat\\u0131\\u015F fiyat\\u0131n\\u0131 belirtin...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"endDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Kapan\\u0131\\u015F Tarihi\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faCalendar,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }))), __jsx(DatePicker, {\n      id: \"endDate\",\n      className: \"form-control\",\n      selected: this.state.endDate,\n      onChange: this.handleChange,\n      locale: \"tr\",\n      showTimeSelect: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        textDecoration: 'underline'\n      },\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Konum\"), __jsx(\"div\", {\n      className: \"row\",\n      id: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"\\u0130l\"), __jsx(Input, {\n      type: \"select\",\n      name: \"city\",\n      id: \"city\",\n      value: this.state.city,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, cities)), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"district\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"\\u0130l\\xE7e\"), __jsx(Input, {\n      type: \"select\",\n      name: \"district\",\n      id: \"district\",\n      value: this.state.district,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, districts)))), __jsx(Button, {\n      color: \"danger\",\n      size: \"lg\",\n      type: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Sat\\u0131\\u015F\\u0131 Ba\\u015Flat\")), __jsx(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"filepond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"\\xDCr\\xFCn foto\\u011Fraflar\\u0131\"), __jsx(FilePond, {\n      id: \"filepond\",\n      files: this.state.files,\n      labelInvalidField: \"Sadece foto\\u011Fraf dosyalar\\u0131 y\\xFCkleyebilirsiniz\",\n      labelIdle: \"S\\xFCr\\xFCkleyip b\\u0131rak\\u0131n, veya bilgisayar\\u0131n\\u0131zdan y\\xFCklemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelTapToRetry: \"Yeniden denemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessingError: \"Foto\\u011Fraf y\\xFCklenirken hata olu\\u015Ftu\",\n      labelFileProcessingComplete: \"Y\\xFCkleme tamamland\\u0131\",\n      labelTapToUndo: \"Geri almak i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessing: \"Foto\\u011Fraf y\\xFCkleniyor\",\n      labelTapToCancel: \"\\u0130ptal etmek i\\xE7in t\\u0131klay\\u0131n\",\n      allowMultiple: true,\n      maxFiles: 5,\n      server: {\n        url: apiConfig.serverUrl,\n        process: '/file/product',\n        revert: '/file/product'\n      },\n      onupdatefiles: fileItems => {\n        // Set currently active file objects to this.state\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nSell.getInitialProps = async ctx => {\n  // Check user's session\n  const token = auth(ctx);\n  return {\n    token\n  };\n};\n\nexport default Sell;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/pages/sell.js"],"names":["Layout","Form","FormGroup","Label","Input","InputGroupText","InputGroupAddon","InputGroup","Button","faCalendar","faLiraSign","axios","auth","DatePicker","registerLocale","tr","FontAwesomeIcon","apiConfig","require","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","Sell","React","Component","constructor","props","date","setState","endDate","event","url","serverUrl","preventDefault","filenames","i","target","filepond","length","push","value","post","title","state","description","firstPrice","city","district","files","headers","authorization","token","then","response","catch","getUser","loggedIn","user","locations","defaultCity","Date","selectedCity","handleInputChange","bind","updateSelectedCity","handleSubmit","name","find","location","componentDidMount","getLocations","data","error","console","log","get","render","cities","map","districts","padding","marginTop","display","handleChange","textDecoration","process","revert","fileItems","fileItem","file","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport {faCalendar, faLiraSign} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {auth} from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from  \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\nconst apiConfig = require('../api-config');\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component{\n    constructor(props) {\n        super(props);\n        var token = this.props.token;\n        this.getUser(token);\n        this.state = {\n            loggedIn: token ? true : false,\n            user: {},\n            title: '',\n            description: '',\n            state: '',\n            firstPrice: '',\n            locations: [apiConfig.defaultCity],\n            endDate: new Date(),\n            selectedCity: apiConfig.defaultCity,\n            district: '',\n            city: '',\n            files: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.updateSelectedCity = this.updateSelectedCity.bind(this);\n        this.handleSubmit       = this.handleSubmit.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n\n        if(name == \"city\"){\n            var selectedCity = this.state.locations.find(location => location.city === value);\n            this.updateSelectedCity(selectedCity);\n        }\n    }\n    updateSelectedCity(city){\n        this.setState({\n            selectedCity: city\n        });\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    handleChange = date => {\n        this.setState({\n            endDate: date\n        });\n    };\n    getUser(token){\n        const url = apiConfig.serverUrl + '/user/get';\n        axios.post(url, {}, {\n            headers:{\n                authorization: token\n            }})\n            .then((response) => {\n                this.setState({\n                    user: response.data.user\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    handleSubmit = (event) => {\n        const url = apiConfig.serverUrl + '/sales/new';\n\n        event.preventDefault();\n\n        let filenames = [];\n\n        for (var i=0; i < event.target.filepond.length; i++){\n            filenames.push(event.target.filepond[i].value);\n        }\n\n        axios.post(url,{\n            title: this.state.title,\n            description: this.state.description,\n            state: this.state.state,\n            firstPrice: this.state.firstPrice,\n            endDate: this.state.endDate,\n            city: this.state.city,\n            district: this.state.district,\n            files: filenames\n        },{\n            headers:{\n                authorization: this.state.token\n            }\n        }).then((response) => {\n\n        }).catch();\n    }\n    getLocations(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/locations';\n        axios.get(url)\n            .then((response) => {\n                this.setState({\n                    locations: response.data.locations,\n                    selectedCity: response.data.locations[0]\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            }.bind(this));\n    }\n\n    render() {\n        const cities = this.state.locations.map((location) =>\n            <option>{location.city}</option>\n        );\n        var location;\n        for (location in this.state.locations){\n            if (location.city === this.state.city){\n                this.setState({\n                    selectedCity: location\n                });\n            }\n        }\n        const districts = this.state.selectedCity.districts.map((district)=>\n            <option>{district}</option>\n        );\n\n        return (\n            <Layout page=\"sell\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <h2> Satış Başlat </h2>\n                    <hr/>\n                    <Form onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <FormGroup>\n                                    <Label for=\"title\">Başlık</Label>\n                                    <Input type=\"text\"\n                                           name=\"title\"\n                                           id=\"title\"\n                                           value={this.state.title}\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Ürününüzü tanımlayan birkaç kelime...\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"description\">Açıklama</Label>\n                                    <Input type=\"textarea\"\n                                           id=\"description\"\n                                           name=\"description\"\n                                           value={this.state.description}\n                                           rows=\"5\"\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Ürününüz hakkında açıklamalar ve belirtmek istediğiniz ekstra bilgiler.\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"state\">Durum</Label>\n                                    <Input type=\"select\"\n                                           name=\"state\"\n                                           id=\"state\"\n                                           value={this.state.state}\n                                           onChange={this.handleInputChange}>\n                                        <option>Durum seçin</option>\n                                        <option>Kullanılmamış</option>\n                                        <option>Yeni gibi</option>\n                                        <option>Az kullanılmış</option>\n                                        <option>Eski</option>\n                                        <option>Çok Eski</option>\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"firstPrice\">Başlangıç Fiyatı</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faLiraSign} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"number\"\n                                               name=\"firstPrice\"\n                                               value={this.state.firstPrice}\n                                               onChange={this.handleInputChange}\n                                               id=\"firstPrice\"\n                                               placeholder=\"Minimum satış fiyatını belirtin...\" />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"endDate\">Kapanış Tarihi</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faCalendar} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <DatePicker\n                                            id=\"endDate\"\n                                            className=\"form-control\"\n                                            selected={this.state.endDate}\n                                            onChange={this.handleChange}\n                                            locale=\"tr\"\n                                            showTimeSelect\n                                        />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{textDecoration:'underline'}} for=\"location\">Konum</Label>\n                                    <div className=\"row\" id=\"location\">\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"city\">İl</Label>\n                                            <Input type=\"select\"\n                                                   name=\"city\"\n                                                   id=\"city\"\n                                                   value={this.state.city}\n                                                   onChange={this.handleInputChange}>\n                                                {cities}\n                                            </Input>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"district\">İlçe</Label>\n                                            <Input type=\"select\"\n                                                   name=\"district\"\n                                                   id=\"district\"\n                                                   value={this.state.district}\n                                                    onChange={this.handleInputChange}>\n                                                {districts}\n                                            </Input>\n                                        </div>\n                                    </div>\n                                </FormGroup>\n                                <Button color=\"danger\"\n                                        size=\"lg\"\n                                        type=\"submit\"\n                                        block>\n                                    Satışı Başlat\n                                </Button>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"filepond\">Ürün fotoğrafları</Label>\n                                    <FilePond\n                                        id=\"filepond\"\n                                        files={this.state.files}\n                                        labelInvalidField=\"Sadece fotoğraf dosyaları yükleyebilirsiniz\"\n                                        labelIdle=\"Sürükleyip bırakın, veya bilgisayarınızdan yüklemek için tıklayın\"\n                                        labelTapToRetry=\"Yeniden denemek için tıklayın\"\n                                        labelFileProcessingError=\"Fotoğraf yüklenirken hata oluştu\"\n                                        labelFileProcessingComplete=\"Yükleme tamamlandı\"\n                                        labelTapToUndo=\"Geri almak için tıklayın\"\n                                        labelFileProcessing=\"Fotoğraf yükleniyor\"\n                                        labelTapToCancel=\"İptal etmek için tıklayın\"\n                                        allowMultiple={true}\n                                        maxFiles={5}\n                                        server={\n                                            {\n                                                url: apiConfig.serverUrl,\n                                                process: '/file/product',\n                                                revert: '/file/product'\n                                            }\n                                        }\n                                        onupdatefiles={fileItems => {\n                                            // Set currently active file objects to this.state\n                                            this.setState({\n                                                files: fileItems.map(fileItem => fileItem.file)\n                                            });\n                                        }}\n                                    />\n                                </FormGroup>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSell.getInitialProps = async ctx => {\n    // Check user's session\n    const token = auth(ctx);\n\n    return { token }\n};\n\nexport default Sell;"]},"metadata":{},"sourceType":"module"}