{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/components/Countdown.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nclass CountdownNumber extends React.Component {\n  render() {\n    return __jsx(\"span\", {\n      style: {\n        fontSize: '20px',\n        fontFamily: 'Verdana',\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, this.props.number);\n  }\n\n}\n\nclass CountdownTitle extends React.Component {\n  render() {\n    return __jsx(\"span\", {\n      style: {\n        fontSize: '14px',\n        fontFamily: 'Courier New'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.title);\n  }\n\n}\n\nclass CountdownBox extends React.Component {\n  render() {\n    return __jsx(\"span\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(CountdownNumber, {\n      number: this.props.number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), __jsx(CountdownTitle, {\n      title: this.props.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst secondFactor = 1000;\nconst minuteFactor = 60 * secondFactor;\nconst hourFactor = 60 * minuteFactor;\nconst dayFactor = 24 * hourFactor;\nlet intervalId;\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.parseTime();\n  }\n\n  componentDidMount() {\n    intervalId = setInterval(() => {\n      this.setState(this.parseTime());\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(intervalId);\n  }\n\n  parseTime() {\n    let diff = this.props.date ? this.props.date - _Date$now() : 0;\n\n    let day = _parseInt(diff / dayFactor);\n\n    let hourCarry = 24 * day;\n\n    let hour = _parseInt(diff / hourFactor - hourCarry);\n\n    let minuteCarry = 60 * 24 * day + 60 * hour;\n\n    let minute = _parseInt(diff / minuteFactor - minuteCarry);\n\n    let secondCarry = 60 * 60 * 24 * day + 60 * 60 * hour + 60 * minute;\n\n    let second = _parseInt(diff / secondFactor - secondCarry);\n\n    return {\n      day: day,\n      hour: hour,\n      minute: minute,\n      second: second\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"row pr-2 pl-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(CountdownBox, {\n      number: this.state.day,\n      title: \"G\\xDCN\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), __jsx(CountdownBox, {\n      number: this.state.hour,\n      title: \"SAAT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), __jsx(CountdownBox, {\n      number: this.state.minute,\n      title: \"DAK\\u0130KA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), __jsx(CountdownBox, {\n      number: this.state.second,\n      title: \"SAN\\u0130YE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/components/Countdown.js"],"names":["React","CountdownNumber","Component","render","fontSize","fontFamily","display","props","number","CountdownTitle","title","CountdownBox","secondFactor","minuteFactor","hourFactor","dayFactor","intervalId","Countdown","constructor","state","parseTime","componentDidMount","setInterval","setState","componentWillUnmount","clearInterval","diff","date","day","hourCarry","hour","minuteCarry","minute","secondCarry","second"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass CountdownNumber extends React.Component {\n    render() {\n        return (\n            <span style={{fontSize: '20px', fontFamily:'Verdana', display: 'block'}}>\n                {this.props.number}\n            </span>\n        );\n    }\n}\nclass CountdownTitle extends React.Component {\n    render() {\n        return (\n            <span style={{fontSize: '14px', fontFamily:'Courier New'}}>\n                {this.props.title}\n            </span>\n        );\n    }\n}\nclass CountdownBox extends React.Component {\n    render() {\n        return (\n            <span className=\"text-center\">\n                <CountdownNumber number={this.props.number} />\n                <CountdownTitle title={this.props.title} />\n            </span>\n        );\n    }\n}\nconst secondFactor  = 1000;\nconst minuteFactor  = 60 * secondFactor;\nconst hourFactor    = 60 * minuteFactor;\nconst dayFactor     = 24 * hourFactor;\nlet intervalId;\nclass Countdown extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = this.parseTime();\n    }\n    componentDidMount() {\n        intervalId = setInterval(() => {\n            this.setState(this.parseTime());\n        },1000);\n    }\n    componentWillUnmount() {\n        clearInterval(intervalId);\n    }\n    parseTime(){\n        let diff    = this.props.date ? this.props.date - Date.now() : 0;\n        let day     = parseInt(diff/dayFactor);\n\n        let hourCarry   = 24 * day;\n        let hour        = parseInt(diff/hourFactor - hourCarry);\n\n        let minuteCarry = (60 * 24 * day) + (60 * hour);\n        let minute      = parseInt(diff/minuteFactor - minuteCarry);\n\n        let secondCarry = (60 * 60 * 24 * day) + (60 * 60 * hour) + (60 * minute);\n        let second  = parseInt(diff/secondFactor - secondCarry);\n        return {\n          day: day,\n          hour: hour,\n          minute: minute,\n          second: second\n        };\n    }\n    render() {\n        return (\n            <div className=\"row pr-2 pl-2\">\n                <CountdownBox number={this.state.day} title=\"GÜN\" />\n                <CountdownBox number={this.state.hour} title=\"SAAT\" />\n                <CountdownBox number={this.state.minute} title=\"DAKİKA\" />\n                <CountdownBox number={this.state.second} title=\"SANİYE\" />\n            </div>\n        );\n    }\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}