{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/components/ChatBox.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport 'react-chat-elements/dist/main.css';\nimport { MessageList, Input, Button } from 'react-chat-elements';\nimport { serverUrl } from '../api-config';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\nvar socket = socketIOClient(serverUrl);\n\nvar ChatBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatBox, _React$Component);\n\n  function ChatBox(props) {\n    var _this;\n\n    _classCallCheck(this, ChatBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatBox).call(this, props));\n    _this.state = {\n      message: '',\n      messages: []\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleEnter = _this.handleEnter.bind(_assertThisInitialized(_this));\n    _this.handleSendClick = _this.handleSendClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ChatBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getMessages();\n\n      if (this.props.saleId) {\n        socket.on('new message on ' + this.props.saleId, function (msg) {\n          if (msg.receiverEmail === _this2.props.userEmail) _this2.getMessages();\n        });\n      }\n\n      var counter = 0;\n\n      if (this.state.messages.length === 0) {\n        var intervalId;\n        intervalId = setInterval(function () {\n          _this2.getMessages();\n\n          if (_this2.state.messages.length !== 0) {\n            clearInterval(intervalId);\n          }\n        }, 500);\n      }\n\n      if (!this.props.saleId) {\n        var intervalId2;\n        intervalId2 = setInterval(function () {\n          if (_this2.props.saleId) {\n            socket.on('new message on ' + _this2.props.saleId, function (msg) {\n              if (msg.receiverEmail === _this2.props.userEmail) _this2.getMessages();\n            });\n            clearInterval(intervalId2);\n          }\n\n          counter++;\n          console.log(counter);\n        }), 1000;\n      }\n      /*\n       */\n\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      this.setState({\n        message: value\n      });\n    }\n  }, {\n    key: \"handleEnter\",\n    value: function handleEnter(event) {\n      if (event.key === 'Enter') {\n        this.sendMessage();\n      }\n    }\n  }, {\n    key: \"handleSendClick\",\n    value: function handleSendClick() {\n      this.sendMessage();\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage() {\n      var _this3 = this;\n\n      var url = serverUrl + '/message/new';\n      axios.post(url, {\n        text: this.state.message,\n        receiverEmail: this.props.receiverEmail,\n        saleId: this.props.saleId\n      }, {\n        headers: {\n          authorization: this.props.userToken\n        }\n      }).then(function (response) {\n        console.log(response.data);\n\n        _this3.setState({\n          message: ''\n        });\n\n        socket.emit('new message', {\n          relatedSale: _this3.props.saleId,\n          receiverEmail: _this3.props.receiverEmail\n        });\n\n        _this3.refs.message.clear();\n\n        _this3.getMessages();\n      })[\"catch\"](function (error) {\n        throw error;\n      });\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var _this4 = this;\n\n      console.log(\"Sale ID: \" + this.props.saleId);\n      console.log(\"Token: \" + this.props.userToken);\n      var url = serverUrl + '/messages/' + this.props.saleId;\n      axios.post(url, {}, {\n        headers: {\n          authorization: this.props.userToken\n        }\n      }).then(function (response) {\n        _this4.setState({\n          messages: response.data.messages\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var dataSource = [];\n      var messages = this.state.messages;\n      var i;\n\n      for (i in messages) {\n        dataSource.push({\n          position: messages[i].receiverEmail === this.props.receiverEmail ? 'right' : 'left',\n          type: 'text',\n          className: 'mb-2',\n          text: messages[i].messageText,\n          date: messages[i].createdAt\n        });\n      }\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(CardHeader, {\n        className: \"bg-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.props.interlocutor, __jsx(\"span\", {\n        className: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \" \", this.props.salePrice, \"\\u20BA \")), __jsx(CardBody, {\n        style: {\n          minHeight: '400px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(MessageList, {\n        className: \"message-list\",\n        lockable: true,\n        toBottomHeight: '100%',\n        dataSource: dataSource,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      })), __jsx(CardFooter, {\n        className: \"bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(Input, {\n        placeholder: \"Mesaj\\u0131n\\u0131z...\",\n        className: \"pl-2\",\n        multiline: false,\n        ref: \"message\",\n        value: this.state.message,\n        onChange: this.handleInputChange,\n        onKeyDown: this.handleEnter,\n        rightButtons: __jsx(Button, {\n          color: \"white\",\n          className: \"bg-dark btn-lg pl-3 pr-3\",\n          onClick: this.handleSendClick,\n          text: __jsx(FontAwesomeIcon, {\n            icon: faPaperPlane,\n            width: \"16\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ChatBox;\n}(React.Component);\n\nexport default ChatBox;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/components/ChatBox.js"],"names":["React","Card","CardHeader","CardBody","CardFooter","FontAwesomeIcon","faPaperPlane","MessageList","Input","Button","serverUrl","axios","socketIOClient","socket","ChatBox","props","state","message","messages","handleInputChange","bind","handleEnter","handleSendClick","getMessages","saleId","on","msg","receiverEmail","userEmail","counter","length","intervalId","setInterval","clearInterval","intervalId2","console","log","event","target","value","setState","key","sendMessage","url","post","text","headers","authorization","userToken","then","response","data","emit","relatedSale","refs","clear","error","dataSource","i","push","position","type","className","messageText","date","createdAt","interlocutor","salePrice","minHeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport 'react-chat-elements/dist/main.css';\nimport { MessageList, Input, Button } from 'react-chat-elements';\nimport {serverUrl} from '../api-config';\nimport axios from 'axios';\nimport socketIOClient from 'socket.io-client';\n\nconst socket = socketIOClient(serverUrl);\n\nclass ChatBox extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: '',\n            messages: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.handleEnter        = this.handleEnter.bind(this);\n        this.handleSendClick    = this.handleSendClick.bind(this);\n    }\n    componentDidMount() {\n        this.getMessages();\n        if(this.props.saleId){\n            socket.on('new message on ' + this.props.saleId, (msg) => {\n                if(msg.receiverEmail === this.props.userEmail)\n                    this.getMessages();\n            });\n        }\n        let counter = 0;\n        if (this.state.messages.length === 0){\n            let intervalId;\n            intervalId = setInterval(() => {\n                this.getMessages();\n                if (this.state.messages.length !== 0){\n                    clearInterval(intervalId);\n                }\n            }, 500);\n        }\n        if (!this.props.saleId){\n            let intervalId2;\n            intervalId2 = setInterval(() => {\n                if(this.props.saleId){\n                    socket.on('new message on ' + this.props.saleId, (msg) => {\n                        if(msg.receiverEmail === this.props.userEmail)\n                            this.getMessages();\n                    });\n                    clearInterval(intervalId2);\n                }\n                counter ++;\n                console.log(counter);\n            }), 1000;\n        }\n        /*\n\n        */\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n\n        this.setState({\n            message: value,\n        });\n    }\n    handleEnter(event) {\n        if (event.key === 'Enter') {\n            this.sendMessage();\n        }\n    }\n    handleSendClick(){\n        this.sendMessage();\n    }\n    sendMessage(){\n        const url = serverUrl + '/message/new';\n        axios.post(url, {\n            text: this.state.message,\n            receiverEmail: this.props.receiverEmail,\n            saleId: this.props.saleId\n        },{\n            headers:{\n                authorization: this.props.userToken\n            }\n        }).then((response) => {\n            console.log(response.data);\n            this.setState({\n                message: ''\n            });\n            socket.emit('new message', {\n                relatedSale: this.props.saleId,\n                receiverEmail: this.props.receiverEmail\n            });\n            this.refs.message.clear();\n            this.getMessages();\n        }).catch((error) => {\n            throw error;\n        });\n    }\n    getMessages(){\n        console.log(\"Sale ID: \"+this.props.saleId);\n        console.log(\"Token: \"+this.props.userToken);\n        const url = serverUrl + '/messages/' + this.props.saleId;\n        axios.post(url, {}, {\n            headers:{\n                authorization: this.props.userToken\n            }\n        }).then((response) => {\n            this.setState({\n                messages: response.data.messages\n            });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        let dataSource = [];\n        let messages = this.state.messages;\n        let i;\n        for (i in messages){\n            dataSource.push({\n                position: messages[i].receiverEmail === this.props.receiverEmail ? 'right' : 'left',\n                type: 'text',\n                className: 'mb-2',\n                text: messages[i].messageText,\n                date: messages[i].createdAt\n            });\n        }\n        return (\n            <div>\n                <Card>\n                    <CardHeader className=\"bg-dark text-white\">\n                        {this.props.interlocutor}\n                        <span className=\"float-right\"> {this.props.salePrice}₺ </span>\n                    </CardHeader>\n                    <CardBody style={{minHeight: '400px'}}>\n                        <MessageList\n                            className='message-list'\n                            lockable={true}\n                            toBottomHeight={'100%'}\n                            dataSource={dataSource} />\n                    </CardBody>\n                    <CardFooter className=\"bg-light\">\n                        <Input\n                            placeholder=\"Mesajınız...\"\n                            className=\"pl-2\"\n                            multiline={false}\n                            ref=\"message\"\n                            value={this.state.message}\n                            onChange={this.handleInputChange}\n                            onKeyDown={this.handleEnter}\n                            rightButtons={\n                                <Button\n                                    color='white'\n                                    className='bg-dark btn-lg pl-3 pr-3'\n                                    onClick={this.handleSendClick}\n                                    text={<FontAwesomeIcon icon={faPaperPlane} width=\"16\" />} />\n                            }/>\n                    </CardFooter>\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nexport default ChatBox;"]},"metadata":{},"sourceType":"module"}