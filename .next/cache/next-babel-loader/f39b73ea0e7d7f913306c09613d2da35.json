{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/pages/sell.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from \"../components/AppLayout\";\nimport ValidationError from \"../components/ValidationError\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button, Progress, Alert } from 'reactstrap';\nimport { faCalendar, faLiraSign } from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport { auth } from \"../utils/auth\";\nimport Router from 'next/router';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport socketIOClient from 'socket.io-client';\n\nvar apiConfig = require('../api-config');\n\nvar socket = socketIOClient(apiConfig.serverUrl);\nvar minimumSaleDuration = 1000 * 60 * 60 * 12; //12 hours\n\nregisterLocale('tr', tr);\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileValidateType);\n\nvar Sell =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sell, _React$Component);\n\n  function Sell(props) {\n    var _this;\n\n    _classCallCheck(this, Sell);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sell).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (date) {\n      var validationErrors = _this.state.validationErrors;\n      validationErrors.endDate = '';\n\n      _this.setState({\n        endDate: date,\n        validationErrors: validationErrors\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      var url = apiConfig.serverUrl + '/sale/new';\n      event.preventDefault();\n      var filenames = [];\n\n      if (event.target.filepond.length) {\n        for (var i = 0; i < event.target.filepond.length; i++) {\n          filenames.push(event.target.filepond[i].value);\n        }\n      } else if (event.target.filepond.value) {\n        filenames.push(event.target.filepond.value);\n      }\n\n      var validated = _this.validate();\n\n      if (!validated) return;\n      axios.post(url, {\n        title: _this.state.title,\n        description: _this.state.description,\n        state: _this.state.state,\n        firstPrice: _this.state.firstPrice,\n        endDate: _this.state.endDate,\n        city: _this.state.city,\n        district: _this.state.district,\n        images: filenames\n      }, {\n        headers: {\n          authorization: _this.state.user.token\n        }\n      }).then(function (response) {\n        var saleId = response.data.saleId;\n        socket.emit('new sale', {\n          saleId: saleId,\n          endDate: _this.state.endDate\n        });\n        Router.push('/index');\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    });\n\n    var token = _this.props.token;\n\n    _this.getUser(token);\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      user: {},\n      title: '',\n      description: '',\n      state: '',\n      firstPrice: '',\n      focuses: {},\n      validationErrors: {},\n      locations: [apiConfig.defaultCity],\n      endDate: new Date(),\n      selectedCity: apiConfig.defaultCity,\n      district: '',\n      city: '',\n      files: []\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.updateSelectedCity = _this.updateSelectedCity.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleInputFocus = _this.handleInputFocus.bind(_assertThisInitialized(_this));\n    _this.handleInputBlur = _this.handleInputBlur.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Sell, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getLocations();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var _this$setState;\n\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      var validationErrors = this.state.validationErrors;\n      validationErrors[name] = '';\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"validationErrors\", validationErrors), _this$setState));\n\n      if (name == \"city\") {\n        var selectedCity = this.state.locations.find(function (location) {\n          return location.city === value;\n        });\n        this.updateSelectedCity(selectedCity);\n      }\n    }\n  }, {\n    key: \"handleInputFocus\",\n    value: function handleInputFocus(event) {\n      var target = event.target;\n      var name = target.name;\n      var focuses = this.state.focuses;\n      focuses[name] = true;\n      this.setState({\n        focuses: focuses\n      });\n    }\n  }, {\n    key: \"handleInputBlur\",\n    value: function handleInputBlur(event) {\n      var target = event.target;\n      var name = target.name;\n      var focuses = this.state.focuses;\n      focuses[name] = false;\n      this.setState({\n        focuses: focuses\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var validated = true;\n      var validationErrors = {};\n\n      if (this.state.files.length === 0) {\n        validationErrors.image = \"Lütfen en az bir fotoğraf yükleyin.\";\n        validated = false;\n      }\n\n      if (this.state.title.length === 0) {\n        validationErrors.title = \"Lütfen ürününüze bir başlık verin.\";\n        validated = false;\n      } else if (this.state.title.length > 40) {\n        validationErrors.title = \"Başlık en fazla 40 karakter olabilir.\";\n        validated = false;\n      }\n\n      if (this.state.description.length > 400) {\n        validationErrors.description = \"Açıklama en fazla 400 karakter olabilir.\";\n        validated = false;\n      }\n\n      if (this.state.endDate < _Date$now() + minimumSaleDuration) {\n        validationErrors.endDate = \"Kapanış tarihi en erken 12 saat sonra olabilir.\";\n        validated = false;\n      }\n\n      this.setState({\n        validationErrors: validationErrors\n      });\n      return validated;\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(token) {\n      var _this2 = this;\n\n      var url = apiConfig.serverUrl + '/user/get';\n      axios.post(url, {}, {\n        headers: {\n          authorization: token\n        }\n      }).then(function (response) {\n        _this2.setState({\n          user: response.data.user\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getLocations\",\n    value: function getLocations() {\n      var _this3 = this;\n\n      var apiConfig = require('../api-config');\n\n      var url = apiConfig.serverUrl + '/locations';\n      axios.get(url).then(function (response) {\n        _this3.setState({\n          locations: response.data.locations,\n          selectedCity: response.data.locations[0]\n        });\n      })[\"catch\"](function (error) {\n        console.log(error);\n      }.bind(this));\n    }\n  }, {\n    key: \"updateSelectedCity\",\n    value: function updateSelectedCity(city) {\n      this.setState({\n        selectedCity: city\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var cities = this.state.locations.map(function (location) {\n        return __jsx(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, location.city);\n      });\n      var location;\n\n      for (location in this.state.locations) {\n        if (location.city === this.state.city) {\n          this.setState({\n            selectedCity: location\n          });\n        }\n      }\n\n      var districts = this.state.selectedCity.districts.map(function (district) {\n        return __jsx(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, district);\n      });\n      console.log(this.state.validationErrors.title);\n      return __jsx(Layout, {\n        page: \"sell\",\n        user: this.state.user,\n        loggedIn: this.state.loggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"container bg-white\",\n        style: {\n          padding: '3%',\n          marginTop: '3%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \" Sat\\u0131\\u015F Ba\\u015Flat \"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), __jsx(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Ba\\u015Fl\\u0131k\"), __jsx(Input, {\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        maxLength: \"40\",\n        value: this.state.title,\n        onChange: this.handleInputChange,\n        onFocus: this.handleInputFocus,\n        onBlur: this.handleInputBlur,\n        placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz\\xFC tan\\u0131mlayan birka\\xE7 kelime...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), __jsx(ValidationError, {\n        message: this.state.validationErrors.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), this.state.focuses.title && this.state.title.length !== 0 ? __jsx(Progress, {\n        className: \"mt-3\",\n        color: \"info\",\n        value: this.state.title.length * 2.5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }) : \"\"), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"A\\xE7\\u0131klama\"), __jsx(Input, {\n        type: \"textarea\",\n        id: \"description\",\n        name: \"description\",\n        value: this.state.description,\n        rows: \"5\",\n        maxLength: \"400\",\n        onChange: this.handleInputChange,\n        onFocus: this.handleInputFocus,\n        onBlur: this.handleInputBlur,\n        style: {\n          outline: 'none'\n        },\n        placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz hakk\\u0131nda a\\xE7\\u0131klamalar ve belirtmek istedi\\u011Finiz ekstra bilgiler.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), __jsx(ValidationError, {\n        message: this.state.validationErrors.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), this.state.focuses.description && this.state.description.length !== 0 ? __jsx(Progress, {\n        className: \"mt-3\",\n        color: \"info\",\n        value: this.state.description.length / 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }) : \"\"), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"Durum\"), __jsx(Input, {\n        type: \"select\",\n        name: \"state\",\n        id: \"state\",\n        value: this.state.state,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Durum se\\xE7in\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Kullan\\u0131lmam\\u0131\\u015F\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"Yeni gibi\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Az kullan\\u0131lm\\u0131\\u015F\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Eski\"), __jsx(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"\\xC7ok Eski\"))), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"firstPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Ba\\u015Flang\\u0131\\xE7 Fiyat\\u0131\"), __jsx(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, __jsx(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, __jsx(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faLiraSign,\n        width: \"16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }))), __jsx(Input, {\n        type: \"number\",\n        name: \"firstPrice\",\n        value: this.state.firstPrice,\n        onChange: this.handleInputChange,\n        id: \"firstPrice\",\n        placeholder: \"Minimum sat\\u0131\\u015F fiyat\\u0131n\\u0131 belirtin...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }))), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, __jsx(Label, {\n        style: {\n          display: 'block'\n        },\n        \"for\": \"endDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, \"Kapan\\u0131\\u015F Tarihi\"), __jsx(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, __jsx(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, __jsx(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, __jsx(FontAwesomeIcon, {\n        icon: faCalendar,\n        width: \"16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))), __jsx(DatePicker, {\n        id: \"endDate\",\n        className: \"form-control\",\n        selected: this.state.endDate,\n        onChange: this.handleChange,\n        locale: \"tr\",\n        showTimeSelect: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })), __jsx(ValidationError, {\n        message: this.state.validationErrors.endDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      })), __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, __jsx(Label, {\n        style: {\n          textDecoration: 'underline'\n        },\n        \"for\": \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Konum\"), __jsx(\"div\", {\n        className: \"row\",\n        id: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"\\u0130l\"), __jsx(Input, {\n        type: \"select\",\n        name: \"city\",\n        id: \"city\",\n        value: this.state.city,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, cities)), __jsx(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, __jsx(Label, {\n        \"for\": \"district\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"\\u0130l\\xE7e\"), __jsx(Input, {\n        type: \"select\",\n        name: \"district\",\n        id: \"district\",\n        value: this.state.district,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, districts)), __jsx(ValidationError, {\n        message: this.state.validationErrors.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }))), __jsx(Button, {\n        color: \"danger\",\n        size: \"lg\",\n        type: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360\n        },\n        __self: this\n      }, \"Sat\\u0131\\u015F\\u0131 Ba\\u015Flat\")), __jsx(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, __jsx(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, __jsx(Label, {\n        style: {\n          display: 'block'\n        },\n        \"for\": \"filepond\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"\\xDCr\\xFCn foto\\u011Fraflar\\u0131\"), __jsx(FilePond, {\n        id: \"filepond\",\n        files: this.state.files,\n        allowFileTypeValidation: true,\n        acceptedFileTypes: ['image/*'],\n        labelInvalidField: \"Sadece foto\\u011Fraf dosyalar\\u0131 y\\xFCkleyebilirsiniz\",\n        labelIdle: \"S\\xFCr\\xFCkleyip b\\u0131rak\\u0131n, veya bilgisayar\\u0131n\\u0131zdan y\\xFCklemek i\\xE7in t\\u0131klay\\u0131n\",\n        labelTapToRetry: \"Yeniden denemek i\\xE7in t\\u0131klay\\u0131n\",\n        labelFileProcessingError: \"Foto\\u011Fraf y\\xFCklenirken hata olu\\u015Ftu\",\n        labelFileProcessingComplete: \"Y\\xFCkleme tamamland\\u0131\",\n        labelTapToUndo: \"Geri almak i\\xE7in t\\u0131klay\\u0131n\",\n        labelFileProcessing: \"Foto\\u011Fraf y\\xFCkleniyor\",\n        labelTapToCancel: \"\\u0130ptal etmek i\\xE7in t\\u0131klay\\u0131n\",\n        allowMultiple: true,\n        maxFiles: 6,\n        server: {\n          url: apiConfig.serverUrl,\n          process: '/file/product',\n          revert: '/file/product'\n        },\n        onupdatefiles: function onupdatefiles(fileItems) {\n          var validationErrors = _this4.state.validationErrors;\n          validationErrors.image = ''; // Set currently active file objects to this.state\n\n          _this4.setState({\n            files: fileItems.map(function (fileItem) {\n              return fileItem.file;\n            }),\n            validationErrors: validationErrors\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }), __jsx(ValidationError, {\n        message: this.state.validationErrors.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return Sell;\n}(React.Component);\n\nSell.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(ctx) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Check user's session\n            token = auth(ctx);\n            return _context.abrupt(\"return\", {\n              token: token\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Sell;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/pages/sell.js"],"names":["React","Layout","ValidationError","Form","FormGroup","Label","Input","InputGroupText","InputGroupAddon","InputGroup","Button","Progress","Alert","faCalendar","faLiraSign","axios","auth","Router","DatePicker","registerLocale","tr","FontAwesomeIcon","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginFileValidateType","socketIOClient","apiConfig","require","socket","serverUrl","minimumSaleDuration","Sell","props","date","validationErrors","state","endDate","setState","event","url","preventDefault","filenames","target","filepond","length","i","push","value","validated","validate","post","title","description","firstPrice","city","district","images","headers","authorization","user","token","then","response","saleId","data","emit","error","console","log","getUser","loggedIn","focuses","locations","defaultCity","Date","selectedCity","files","handleInputChange","bind","updateSelectedCity","handleSubmit","handleInputFocus","handleInputBlur","getLocations","name","find","location","image","get","cities","map","districts","padding","marginTop","outline","display","handleChange","textDecoration","process","revert","fileItems","fileItem","file","Component","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Layout from \"../components/AppLayout\";\nimport ValidationError from \"../components/ValidationError\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button, Progress, Alert } from 'reactstrap';\nimport {faCalendar, faLiraSign} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {auth} from \"../utils/auth\";\nimport Router from 'next/router'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from  \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport FilePondPluginFileValidateType from 'filepond-plugin-file-validate-type';\nimport socketIOClient from 'socket.io-client';\n\nconst apiConfig = require('../api-config');\nconst socket = socketIOClient(apiConfig.serverUrl);\n\nconst minimumSaleDuration = (1000 * 60 * 60 * 12); //12 hours\n\nregisterLocale('tr', tr);\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginFileValidateType);\n\nclass Sell extends React.Component{\n    constructor(props) {\n        super(props);\n        var token = this.props.token;\n        this.getUser(token);\n        this.state = {\n            loggedIn: token ? true : false,\n            user: {},\n            title: '',\n            description: '',\n            state: '',\n            firstPrice: '',\n            focuses: {},\n            validationErrors: {},\n            locations: [apiConfig.defaultCity],\n            endDate: new Date(),\n            selectedCity: apiConfig.defaultCity,\n            district: '',\n            city: '',\n            files: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.updateSelectedCity = this.updateSelectedCity.bind(this);\n        this.handleSubmit       = this.handleSubmit.bind(this);\n        this.handleInputFocus   = this.handleInputFocus.bind(this);\n        this.handleInputBlur    = this.handleInputBlur.bind(this);\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        let validationErrors = this.state.validationErrors;\n        validationErrors[name] = '';\n\n        this.setState({\n            [name]: value,\n            validationErrors: validationErrors\n        });\n\n        if(name == \"city\"){\n            let selectedCity = this.state.locations.find(location => location.city === value);\n            this.updateSelectedCity(selectedCity);\n        }\n    }\n    handleInputFocus(event) {\n        const target = event.target;\n        const name = target.name;\n\n        var focuses = this.state.focuses;\n\n        focuses[name] = true;\n\n        this.setState({\n            focuses: focuses\n        });\n    }\n    handleInputBlur(event) {\n        const target = event.target;\n        const name = target.name;\n\n        var focuses = this.state.focuses;\n\n        focuses[name] = false;\n\n        this.setState({\n            focuses: focuses\n        });\n    }\n    handleChange = date => {\n        let validationErrors = this.state.validationErrors;\n        validationErrors.endDate = '';\n        this.setState({\n            endDate: date,\n            validationErrors: validationErrors\n        });\n    };\n    handleSubmit = (event) => {\n        const url = apiConfig.serverUrl + '/sale/new';\n\n        event.preventDefault();\n\n        let filenames = [];\n\n        if (event.target.filepond.length){\n            for (var i=0; i < event.target.filepond.length; i++){\n                filenames.push(event.target.filepond[i].value);\n            }\n        }else if(event.target.filepond.value){\n            filenames.push(event.target.filepond.value);\n        }\n\n        let validated = this.validate();\n        if(!validated) return;\n\n        axios.post(url,{\n            title: this.state.title,\n            description: this.state.description,\n            state: this.state.state,\n            firstPrice: this.state.firstPrice,\n            endDate: this.state.endDate,\n            city: this.state.city,\n            district: this.state.district,\n            images: filenames\n        },{\n            headers:{\n                authorization: this.state.user.token\n            }\n        }).then((response) => {\n            var saleId = response.data.saleId;\n            socket.emit('new sale', {\n                saleId: saleId,\n                endDate: this.state.endDate\n            });\n            Router.push('/index');\n        }).catch((error) => {\n            console.log(error);\n        });\n    }\n    validate(){\n        let validated = true;\n\n        let validationErrors = {};\n\n        if(this.state.files.length === 0){\n            validationErrors.image = \"Lütfen en az bir fotoğraf yükleyin.\";\n            validated = false;\n        }\n\n        if(this.state.title.length === 0){\n            validationErrors.title = \"Lütfen ürününüze bir başlık verin.\";\n            validated = false;\n        }else if(this.state.title.length > 40){\n            validationErrors.title = \"Başlık en fazla 40 karakter olabilir.\";\n            validated = false;\n        }\n\n        if(this.state.description.length > 400){\n            validationErrors.description = \"Açıklama en fazla 400 karakter olabilir.\";\n            validated = false;\n        }\n\n        if(this.state.endDate < (Date.now() + minimumSaleDuration)){\n            validationErrors.endDate = \"Kapanış tarihi en erken 12 saat sonra olabilir.\";\n            validated = false;\n        }\n\n        this.setState({\n            validationErrors: validationErrors\n        });\n        return validated;\n    }\n    getUser(token){\n        const url = apiConfig.serverUrl + '/user/get';\n        axios.post(url, {}, {\n            headers:{\n                authorization: token\n            }})\n            .then((response) => {\n                this.setState({\n                    user: response.data.user\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getLocations(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/locations';\n        axios.get(url)\n            .then((response) => {\n                this.setState({\n                    locations: response.data.locations,\n                    selectedCity: response.data.locations[0]\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            }.bind(this));\n    }\n    updateSelectedCity(city){\n        this.setState({\n            selectedCity: city\n        });\n    }\n    render() {\n        const cities = this.state.locations.map((location) =>\n            <option>{location.city}</option>\n        );\n        var location;\n        for (location in this.state.locations){\n            if (location.city === this.state.city){\n                this.setState({\n                    selectedCity: location\n                });\n            }\n        }\n        const districts = this.state.selectedCity.districts.map((district)=>\n            <option>{district}</option>\n        );\n        console.log(this.state.validationErrors.title);\n        return (\n            <Layout page=\"sell\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <h2> Satış Başlat </h2>\n                    <hr/>\n                    <Form onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <FormGroup>\n                                    <Label for=\"title\">Başlık</Label>\n                                    <Input type=\"text\"\n                                           name=\"title\"\n                                           id=\"title\"\n                                           maxLength=\"40\"\n                                           value={this.state.title}\n                                           onChange={this.handleInputChange}\n                                           onFocus={this.handleInputFocus}\n                                           onBlur={this.handleInputBlur}\n                                           placeholder=\"Ürününüzü tanımlayan birkaç kelime...\" />\n\n                                    <ValidationError message={this.state.validationErrors.title} />\n                                    { (this.state.focuses.title && this.state.title.length  !== 0 ) ?\n                                        <Progress className=\"mt-3\"\n                                                  color=\"info\"\n                                                  value={this.state.title.length * 2.5} /> : \"\"\n                                    }\n\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"description\">Açıklama</Label>\n                                    <Input type=\"textarea\"\n                                           id=\"description\"\n                                           name=\"description\"\n                                           value={this.state.description}\n                                           rows=\"5\"\n                                           maxLength=\"400\"\n                                           onChange={this.handleInputChange}\n                                           onFocus={this.handleInputFocus}\n                                           onBlur={this.handleInputBlur}\n                                           style={{outline: 'none'}}\n                                           placeholder=\"Ürününüz hakkında açıklamalar ve belirtmek istediğiniz ekstra bilgiler.\" />\n                                    <ValidationError message={this.state.validationErrors.description} />\n                                    { (this.state.focuses.description && this.state.description.length  !== 0 ) ?\n                                        <Progress className=\"mt-3\"\n                                                  color=\"info\"\n                                                  value={this.state.description.length / 4} /> : \"\"\n                                    }\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"state\">Durum</Label>\n                                    <Input type=\"select\"\n                                           name=\"state\"\n                                           id=\"state\"\n                                           value={this.state.state}\n                                           onChange={this.handleInputChange}>\n                                        <option>Durum seçin</option>\n                                        <option>Kullanılmamış</option>\n                                        <option>Yeni gibi</option>\n                                        <option>Az kullanılmış</option>\n                                        <option>Eski</option>\n                                        <option>Çok Eski</option>\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"firstPrice\">Başlangıç Fiyatı</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faLiraSign} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"number\"\n                                               name=\"firstPrice\"\n                                               value={this.state.firstPrice}\n                                               onChange={this.handleInputChange}\n                                               id=\"firstPrice\"\n                                               placeholder=\"Minimum satış fiyatını belirtin...\" />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"endDate\">Kapanış Tarihi</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faCalendar} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <DatePicker\n                                            id=\"endDate\"\n                                            className=\"form-control\"\n                                            selected={this.state.endDate}\n                                            onChange={this.handleChange}\n                                            locale=\"tr\"\n                                            showTimeSelect\n                                        />\n                                    </InputGroup>\n                                    <ValidationError message={this.state.validationErrors.endDate} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{textDecoration:'underline'}} for=\"location\">Konum</Label>\n                                    <div className=\"row\" id=\"location\">\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"city\">İl</Label>\n                                            <Input type=\"select\"\n                                                   name=\"city\"\n                                                   id=\"city\"\n                                                   value={this.state.city}\n                                                   onChange={this.handleInputChange}>\n                                                {cities}\n                                            </Input>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"district\">İlçe</Label>\n                                            <Input type=\"select\"\n                                                   name=\"district\"\n                                                   id=\"district\"\n                                                   value={this.state.district}\n                                                    onChange={this.handleInputChange}>\n                                                {districts}\n                                            </Input>\n                                        </div>\n                                        <ValidationError message={this.state.validationErrors.city} />\n                                    </div>\n                                </FormGroup>\n                                <Button color=\"danger\"\n                                        size=\"lg\"\n                                        type=\"submit\"\n                                        block>\n                                    Satışı Başlat\n                                </Button>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"filepond\">Ürün fotoğrafları</Label>\n                                    <FilePond\n                                        id=\"filepond\"\n                                        files={this.state.files}\n                                        allowFileTypeValidation\n                                        acceptedFileTypes={['image/*']}\n                                        labelInvalidField=\"Sadece fotoğraf dosyaları yükleyebilirsiniz\"\n                                        labelIdle=\"Sürükleyip bırakın, veya bilgisayarınızdan yüklemek için tıklayın\"\n                                        labelTapToRetry=\"Yeniden denemek için tıklayın\"\n                                        labelFileProcessingError=\"Fotoğraf yüklenirken hata oluştu\"\n                                        labelFileProcessingComplete=\"Yükleme tamamlandı\"\n                                        labelTapToUndo=\"Geri almak için tıklayın\"\n                                        labelFileProcessing=\"Fotoğraf yükleniyor\"\n                                        labelTapToCancel=\"İptal etmek için tıklayın\"\n                                        allowMultiple={true}\n                                        maxFiles={6}\n                                        server={\n                                            {\n                                                url: apiConfig.serverUrl,\n                                                process: '/file/product',\n                                                revert: '/file/product'\n                                            }\n                                        }\n                                        onupdatefiles={fileItems => {\n                                            let validationErrors = this.state.validationErrors;\n                                            validationErrors.image = '';\n                                            // Set currently active file objects to this.state\n                                            this.setState({\n                                                files: fileItems.map(fileItem => fileItem.file),\n                                                validationErrors: validationErrors\n                                            });\n                                        }}\n                                    />\n                                    <ValidationError message={this.state.validationErrors.image} />\n                                </FormGroup>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSell.getInitialProps = async ctx => {\n    // Check user's session\n    const token = auth(ctx);\n\n    return { token }\n};\n\nexport default Sell;"]},"metadata":{},"sourceType":"module"}