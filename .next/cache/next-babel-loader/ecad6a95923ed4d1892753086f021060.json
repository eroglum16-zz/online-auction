{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/pages/sell.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport { faCalendar, faLiraSign } from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport { auth } from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\n\nconst apiConfig = require('../api-config'); // Import React FilePond\n\n\nimport { FilePond, registerPlugin } from \"react-filepond\"; // Import FilePond styles\n\nimport \"filepond/dist/filepond.min.css\"; // Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\"; // Register the plugins\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", date => {\n      this.setState({\n        startDate: date\n      });\n    });\n\n    var token = this.props.token;\n    this.getUser(token);\n    this.state = {\n      loggedIn: token ? true : false,\n      user: {},\n      title: '',\n      state: '',\n      firstPrice: '',\n      locations: [apiConfig.defaultCity],\n      startDate: new Date(),\n      selectedCity: apiConfig.defaultCity,\n      district: '',\n      city: '',\n      files: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateSelectedCity = this.updateSelectedCity.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n\n    if (name == \"city\") {\n      var selectedCity = this.state.locations.find(location => location.city === value);\n      this.updateSelectedCity(selectedCity);\n    }\n  }\n\n  updateSelectedCity(city) {\n    this.setState({\n      selectedCity: city\n    });\n  }\n\n  componentDidMount() {\n    this.getLocations();\n  }\n\n  getUser(token) {\n    const url = apiConfig.serverUrl + '/user/get';\n    axios.post(url, {}, {\n      headers: {\n        authorization: token\n      }\n    }).then(response => {\n      this.setState({\n        user: response.data.user\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  handleSubmit() {\n    const url = apiConfig.serverUrl + '/sales/new';\n    var filenames = [];\n    axios.post(url, {\n      token: this.state.token,\n      title: this.state.title,\n      state: this.state.state,\n      firstPrice: this.state.firstPrice,\n      startDate: this.state.startDate,\n      city: this.state.city,\n      district: this.state.district,\n      files: this.state.files\n    }).then(response => {}).catch();\n  }\n\n  getLocations() {\n    const apiConfig = require('../api-config');\n\n    const url = apiConfig.serverUrl + '/locations';\n    axios.get(url).then(response => {\n      this.setState({\n        locations: response.data.locations,\n        selectedCity: response.data.locations[0]\n      });\n      console.log(response.data.locations[0].city);\n    }).catch(function (error) {\n      console.log(error);\n    }.bind(this));\n  }\n\n  render() {\n    const cities = this.state.locations.map(location => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, location.city));\n    var location;\n\n    for (location in this.state.locations) {\n      if (location.city === this.state.city) {\n        console.log(location.city);\n        console.log(this.state.city);\n        this.setState({\n          selectedCity: location\n        });\n      }\n    }\n\n    const districts = this.state.selectedCity.districts.map(district => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, district));\n    return __jsx(Layout, {\n      page: \"sell\",\n      user: this.state.user,\n      loggedIn: this.state.loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container bg-white\",\n      style: {\n        padding: '3%',\n        marginTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Sat\\u0131\\u015F Ba\\u015Flat \"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Ba\\u015Fl\\u0131k\"), __jsx(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz\\xFC tan\\u0131mlayan birka\\xE7 kelime...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Durum\"), __jsx(Input, {\n      type: \"select\",\n      name: \"state\",\n      id: \"state\",\n      value: this.state.state,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Kullan\\u0131lmam\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Yeni gibi\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Az kullan\\u0131lm\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Eski\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"\\xC7ok Eski\"))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"firstPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Ba\\u015Flang\\u0131\\xE7 Fiyat\\u0131\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faLiraSign,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))), __jsx(Input, {\n      type: \"number\",\n      name: \"firstPrice\",\n      value: this.state.firstPrice,\n      onChange: this.handleInputChange,\n      id: \"firstPrice\",\n      placeholder: \"Minimum sat\\u0131\\u015F fiyat\\u0131n\\u0131 belirtin...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"endDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Kapan\\u0131\\u015F Tarihi\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faCalendar,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), __jsx(DatePicker, {\n      id: \"endDate\",\n      className: \"form-control\",\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      locale: \"tr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        textDecoration: 'underline'\n      },\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Konum\"), __jsx(\"div\", {\n      className: \"row\",\n      id: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"\\u0130l\"), __jsx(Input, {\n      type: \"select\",\n      name: \"city\",\n      id: \"city\",\n      value: this.state.city,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, cities)), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"district\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"\\u0130l\\xE7e\"), __jsx(Input, {\n      type: \"select\",\n      name: \"district\",\n      id: \"district\",\n      value: this.state.district,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, districts)))), __jsx(Button, {\n      color: \"danger\",\n      size: \"lg\",\n      onClick: this.handleSubmit,\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Sat\\u0131\\u015F\\u0131 Ba\\u015Flat\")), __jsx(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"filepond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"\\xDCr\\xFCn foto\\u011Fraflar\\u0131\"), __jsx(FilePond, {\n      id: \"filepond\",\n      files: this.state.files,\n      labelInvalidField: \"Sadece foto\\u011Fraf dosyalar\\u0131 y\\xFCkleyebilirsiniz\",\n      labelIdle: \"S\\xFCr\\xFCkleyip b\\u0131rak\\u0131n, veya bilgisayar\\u0131n\\u0131zdan y\\xFCklemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelTapToRetry: \"Yeniden denemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessingError: \"Foto\\u011Fraf y\\xFCklenirken hata olu\\u015Ftu\",\n      labelFileProcessingComplete: \"Y\\xFCkleme tamamland\\u0131\",\n      labelTapToUndo: \"Geri almak i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessing: \"Foto\\u011Fraf y\\xFCkleniyor\",\n      labelTapToCancel: \"\\u0130ptal etmek i\\xE7in t\\u0131klay\\u0131n\",\n      allowMultiple: true,\n      maxFiles: 5,\n      server: apiConfig.serverUrl + '/file/product',\n      onupdatefiles: fileItems => {\n        // Set currently active file objects to this.state\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nSell.getInitialProps = async ctx => {\n  // Check user's session\n  const token = auth(ctx);\n  return {\n    token\n  };\n};\n\nexport default Sell;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/pages/sell.js"],"names":["Layout","Form","FormGroup","Label","Input","InputGroupText","InputGroupAddon","InputGroup","Button","faCalendar","faLiraSign","axios","auth","DatePicker","registerLocale","tr","FontAwesomeIcon","apiConfig","require","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","Sell","React","Component","constructor","props","date","setState","startDate","token","getUser","state","loggedIn","user","title","firstPrice","locations","defaultCity","Date","selectedCity","district","city","files","handleInputChange","bind","updateSelectedCity","handleSubmit","event","target","value","name","find","location","componentDidMount","getLocations","url","serverUrl","post","headers","authorization","then","response","data","catch","error","console","log","filenames","get","render","cities","map","districts","padding","marginTop","display","handleChange","textDecoration","fileItems","fileItem","file","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport {faCalendar, faLiraSign} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {auth} from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from  \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\nconst apiConfig = require('../api-config');\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component{\n    constructor(props) {\n        super(props);\n        var token = this.props.token;\n        this.getUser(token);\n        this.state = {\n            loggedIn: token ? true : false,\n            user: {},\n            title: '',\n            state: '',\n            firstPrice: '',\n            locations: [apiConfig.defaultCity],\n            startDate: new Date(),\n            selectedCity: apiConfig.defaultCity,\n            district: '',\n            city: '',\n            files: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.updateSelectedCity = this.updateSelectedCity.bind(this);\n        this.handleSubmit       = this.handleSubmit.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n\n        if(name == \"city\"){\n            var selectedCity = this.state.locations.find(location => location.city === value);\n            this.updateSelectedCity(selectedCity);\n        }\n    }\n    updateSelectedCity(city){\n        this.setState({\n            selectedCity: city\n        });\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    handleChange = date => {\n        this.setState({\n            startDate: date\n        });\n    };\n    getUser(token){\n        const url = apiConfig.serverUrl + '/user/get';\n        axios.post(url, {}, {\n            headers:{\n                authorization: token\n            }})\n            .then((response) => {\n                this.setState({\n                    user: response.data.user\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    handleSubmit(){\n        const url = apiConfig.serverUrl + '/sales/new';\n\n        var filenames = [];\n\n        \n\n        axios.post(url,{\n            token: this.state.token,\n            title: this.state.title,\n            state: this.state.state,\n            firstPrice: this.state.firstPrice,\n            startDate: this.state.startDate,\n            city: this.state.city,\n            district: this.state.district,\n            files: this.state.files\n        }).then((response) => {\n\n        }).catch();\n    }\n    getLocations(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/locations';\n        axios.get(url)\n            .then((response) => {\n                this.setState({\n                    locations: response.data.locations,\n                    selectedCity: response.data.locations[0]\n                });\n                console.log(response.data.locations[0].city);\n            })\n            .catch(function (error) {\n                console.log(error);\n            }.bind(this));\n    }\n\n    render() {\n        const cities = this.state.locations.map((location) =>\n            <option>{location.city}</option>\n        );\n        var location;\n        for (location in this.state.locations){\n            if (location.city === this.state.city){\n                console.log(location.city);\n                console.log(this.state.city);\n                this.setState({\n                    selectedCity: location\n                });\n            }\n        }\n        const districts = this.state.selectedCity.districts.map((district)=>\n            <option>{district}</option>\n        );\n\n        return (\n            <Layout page=\"sell\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <h2> Satış Başlat </h2>\n                    <hr/>\n                    <Form>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <FormGroup>\n                                    <Label for=\"title\">Başlık</Label>\n                                    <Input type=\"text\"\n                                           name=\"title\"\n                                           id=\"title\"\n                                           value={this.state.title}\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Ürününüzü tanımlayan birkaç kelime...\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"state\">Durum</Label>\n                                    <Input type=\"select\"\n                                           name=\"state\"\n                                           id=\"state\"\n                                           value={this.state.state}\n                                           onChange={this.handleInputChange}>\n                                        <option>Kullanılmamış</option>\n                                        <option>Yeni gibi</option>\n                                        <option>Az kullanılmış</option>\n                                        <option>Eski</option>\n                                        <option>Çok Eski</option>\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"firstPrice\">Başlangıç Fiyatı</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faLiraSign} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"number\"\n                                               name=\"firstPrice\"\n                                               value={this.state.firstPrice}\n                                               onChange={this.handleInputChange}\n                                               id=\"firstPrice\"\n                                               placeholder=\"Minimum satış fiyatını belirtin...\" />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"endDate\">Kapanış Tarihi</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faCalendar} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <DatePicker\n                                            id=\"endDate\"\n                                            className=\"form-control\"\n                                            selected={this.state.startDate}\n                                            onChange={this.handleChange}\n                                            locale=\"tr\"\n                                        />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{textDecoration:'underline'}} for=\"location\">Konum</Label>\n                                    <div className=\"row\" id=\"location\">\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"city\">İl</Label>\n                                            <Input type=\"select\"\n                                                   name=\"city\"\n                                                   id=\"city\"\n                                                   value={this.state.city}\n                                                   onChange={this.handleInputChange}>\n                                                {cities}\n                                            </Input>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"district\">İlçe</Label>\n                                            <Input type=\"select\"\n                                                   name=\"district\"\n                                                   id=\"district\"\n                                                   value={this.state.district}\n                                                    onChange={this.handleInputChange}>\n                                                {districts}\n                                            </Input>\n                                        </div>\n                                    </div>\n                                </FormGroup>\n                                <Button color=\"danger\"\n                                        size=\"lg\"\n                                        onClick={this.handleSubmit}\n                                        block>\n                                    Satışı Başlat\n                                </Button>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"filepond\">Ürün fotoğrafları</Label>\n                                    <FilePond\n                                        id=\"filepond\"\n                                        files={this.state.files}\n                                        labelInvalidField=\"Sadece fotoğraf dosyaları yükleyebilirsiniz\"\n                                        labelIdle=\"Sürükleyip bırakın, veya bilgisayarınızdan yüklemek için tıklayın\"\n                                        labelTapToRetry=\"Yeniden denemek için tıklayın\"\n                                        labelFileProcessingError=\"Fotoğraf yüklenirken hata oluştu\"\n                                        labelFileProcessingComplete=\"Yükleme tamamlandı\"\n                                        labelTapToUndo=\"Geri almak için tıklayın\"\n                                        labelFileProcessing=\"Fotoğraf yükleniyor\"\n                                        labelTapToCancel=\"İptal etmek için tıklayın\"\n                                        allowMultiple={true}\n                                        maxFiles={5}\n                                        server={apiConfig.serverUrl + '/file/product'}\n                                        onupdatefiles={fileItems => {\n                                            // Set currently active file objects to this.state\n                                            this.setState({\n                                                files: fileItems.map(fileItem => fileItem.file)\n                                            });\n                                        }}\n                                    />\n                                </FormGroup>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSell.getInitialProps = async ctx => {\n    // Check user's session\n    const token = auth(ctx);\n\n    return { token }\n};\n\nexport default Sell;"]},"metadata":{},"sourceType":"module"}