{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/pages/sell.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport { faCalendar, faLiraSign } from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport { auth } from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\n\nconst apiConfig = require('../api-config'); // Import React FilePond\n\n\nimport { FilePond, registerPlugin } from \"react-filepond\"; // Import FilePond styles\n\nimport \"filepond/dist/filepond.min.css\"; // Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\n\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\"; // Register the plugins\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", date => {\n      this.setState({\n        startDate: date\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      const url = apiConfig.serverUrl + '/sales/new';\n      event.preventDefault();\n      var files = event.target.filepond;\n      var filenames = files.map(file => file.value);\n      var file;\n\n      for (file in event.target.filepond) {}\n\n      console.log(\"File ids:\");\n      console.log(filenames);\n      axios.post(url, {\n        token: this.state.token,\n        title: this.state.title,\n        state: this.state.state,\n        firstPrice: this.state.firstPrice,\n        startDate: this.state.startDate,\n        city: this.state.city,\n        district: this.state.district,\n        files: this.state.files\n      }).then(response => {}).catch();\n    });\n\n    var token = this.props.token;\n    this.getUser(token);\n    this.state = {\n      loggedIn: token ? true : false,\n      user: {},\n      title: '',\n      state: '',\n      firstPrice: '',\n      locations: [apiConfig.defaultCity],\n      startDate: new Date(),\n      selectedCity: apiConfig.defaultCity,\n      district: '',\n      city: '',\n      files: []\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateSelectedCity = this.updateSelectedCity.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    });\n\n    if (name == \"city\") {\n      var selectedCity = this.state.locations.find(location => location.city === value);\n      this.updateSelectedCity(selectedCity);\n    }\n  }\n\n  updateSelectedCity(city) {\n    this.setState({\n      selectedCity: city\n    });\n  }\n\n  componentDidMount() {\n    this.getLocations();\n  }\n\n  getUser(token) {\n    const url = apiConfig.serverUrl + '/user/get';\n    axios.post(url, {}, {\n      headers: {\n        authorization: token\n      }\n    }).then(response => {\n      this.setState({\n        user: response.data.user\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  getLocations() {\n    const apiConfig = require('../api-config');\n\n    const url = apiConfig.serverUrl + '/locations';\n    axios.get(url).then(response => {\n      this.setState({\n        locations: response.data.locations,\n        selectedCity: response.data.locations[0]\n      });\n    }).catch(function (error) {\n      console.log(error);\n    }.bind(this));\n  }\n\n  render() {\n    const cities = this.state.locations.map(location => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, location.city));\n    var location;\n\n    for (location in this.state.locations) {\n      if (location.city === this.state.city) {\n        this.setState({\n          selectedCity: location\n        });\n      }\n    }\n\n    const districts = this.state.selectedCity.districts.map(district => __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, district));\n    return __jsx(Layout, {\n      page: \"sell\",\n      user: this.state.user,\n      loggedIn: this.state.loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container bg-white\",\n      style: {\n        padding: '3%',\n        marginTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \" Sat\\u0131\\u015F Ba\\u015Flat \"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), __jsx(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Ba\\u015Fl\\u0131k\"), __jsx(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      placeholder: \"\\xDCr\\xFCn\\xFCn\\xFCz\\xFC tan\\u0131mlayan birka\\xE7 kelime...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Durum\"), __jsx(Input, {\n      type: \"select\",\n      name: \"state\",\n      id: \"state\",\n      value: this.state.state,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Kullan\\u0131lmam\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Yeni gibi\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Az kullan\\u0131lm\\u0131\\u015F\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Eski\"), __jsx(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"\\xC7ok Eski\"))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"firstPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Ba\\u015Flang\\u0131\\xE7 Fiyat\\u0131\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faLiraSign,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))), __jsx(Input, {\n      type: \"number\",\n      name: \"firstPrice\",\n      value: this.state.firstPrice,\n      onChange: this.handleInputChange,\n      id: \"firstPrice\",\n      placeholder: \"Minimum sat\\u0131\\u015F fiyat\\u0131n\\u0131 belirtin...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"endDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Kapan\\u0131\\u015F Tarihi\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, __jsx(InputGroupAddon, {\n      addonType: \"prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, __jsx(InputGroupText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, __jsx(FontAwesomeIcon, {\n      icon: faCalendar,\n      width: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }))), __jsx(DatePicker, {\n      id: \"endDate\",\n      className: \"form-control\",\n      selected: this.state.startDate,\n      onChange: this.handleChange,\n      locale: \"tr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        textDecoration: 'underline'\n      },\n      for: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Konum\"), __jsx(\"div\", {\n      className: \"row\",\n      id: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"\\u0130l\"), __jsx(Input, {\n      type: \"select\",\n      name: \"city\",\n      id: \"city\",\n      value: this.state.city,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, cities)), __jsx(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, __jsx(Label, {\n      for: \"district\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"\\u0130l\\xE7e\"), __jsx(Input, {\n      type: \"select\",\n      name: \"district\",\n      id: \"district\",\n      value: this.state.district,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, districts)))), __jsx(Button, {\n      color: \"danger\",\n      size: \"lg\",\n      type: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Sat\\u0131\\u015F\\u0131 Ba\\u015Flat\")), __jsx(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, __jsx(Label, {\n      style: {\n        display: 'block'\n      },\n      for: \"filepond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"\\xDCr\\xFCn foto\\u011Fraflar\\u0131\"), __jsx(FilePond, {\n      id: \"filepond\",\n      files: this.state.files,\n      labelInvalidField: \"Sadece foto\\u011Fraf dosyalar\\u0131 y\\xFCkleyebilirsiniz\",\n      labelIdle: \"S\\xFCr\\xFCkleyip b\\u0131rak\\u0131n, veya bilgisayar\\u0131n\\u0131zdan y\\xFCklemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelTapToRetry: \"Yeniden denemek i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessingError: \"Foto\\u011Fraf y\\xFCklenirken hata olu\\u015Ftu\",\n      labelFileProcessingComplete: \"Y\\xFCkleme tamamland\\u0131\",\n      labelTapToUndo: \"Geri almak i\\xE7in t\\u0131klay\\u0131n\",\n      labelFileProcessing: \"Foto\\u011Fraf y\\xFCkleniyor\",\n      labelTapToCancel: \"\\u0130ptal etmek i\\xE7in t\\u0131klay\\u0131n\",\n      allowMultiple: true,\n      maxFiles: 5,\n      server: apiConfig.serverUrl + '/file/product',\n      onupdatefiles: fileItems => {\n        // Set currently active file objects to this.state\n        this.setState({\n          files: fileItems.map(fileItem => fileItem.file)\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nSell.getInitialProps = async ctx => {\n  // Check user's session\n  const token = auth(ctx);\n  return {\n    token\n  };\n};\n\nexport default Sell;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/pages/sell.js"],"names":["Layout","Form","FormGroup","Label","Input","InputGroupText","InputGroupAddon","InputGroup","Button","faCalendar","faLiraSign","axios","auth","DatePicker","registerLocale","tr","FontAwesomeIcon","apiConfig","require","FilePond","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","Sell","React","Component","constructor","props","date","setState","startDate","event","url","serverUrl","preventDefault","files","target","filepond","filenames","map","file","value","console","log","post","token","state","title","firstPrice","city","district","then","response","catch","getUser","loggedIn","user","locations","defaultCity","Date","selectedCity","handleInputChange","bind","updateSelectedCity","handleSubmit","name","find","location","componentDidMount","getLocations","headers","authorization","data","error","get","render","cities","districts","padding","marginTop","display","handleChange","textDecoration","fileItems","fileItem","getInitialProps","ctx"],"mappings":"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","sourcesContent":["import Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, InputGroupText, InputGroupAddon, InputGroup, Button } from 'reactstrap';\nimport {faCalendar, faLiraSign} from '@fortawesome/free-solid-svg-icons';\nimport axios from \"axios\";\nimport {auth} from \"../utils/auth\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from  \"react-datepicker\";\nimport tr from 'date-fns/locale/tr';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nregisterLocale('tr', tr);\nconst apiConfig = require('../api-config');\n\n// Import React FilePond\nimport { FilePond, registerPlugin } from \"react-filepond\";\n\n// Import FilePond styles\nimport \"filepond/dist/filepond.min.css\";\n\n// Import the Image EXIF Orientation and Image Preview plugins\n// Note: These need to be installed separately\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n// Register the plugins\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\n\nclass Sell extends React.Component{\n    constructor(props) {\n        super(props);\n        var token = this.props.token;\n        this.getUser(token);\n        this.state = {\n            loggedIn: token ? true : false,\n            user: {},\n            title: '',\n            state: '',\n            firstPrice: '',\n            locations: [apiConfig.defaultCity],\n            startDate: new Date(),\n            selectedCity: apiConfig.defaultCity,\n            district: '',\n            city: '',\n            files: []\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.updateSelectedCity = this.updateSelectedCity.bind(this);\n        this.handleSubmit       = this.handleSubmit.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value,\n        });\n\n        if(name == \"city\"){\n            var selectedCity = this.state.locations.find(location => location.city === value);\n            this.updateSelectedCity(selectedCity);\n        }\n    }\n    updateSelectedCity(city){\n        this.setState({\n            selectedCity: city\n        });\n    }\n    componentDidMount() {\n        this.getLocations();\n    }\n    handleChange = date => {\n        this.setState({\n            startDate: date\n        });\n    };\n    getUser(token){\n        const url = apiConfig.serverUrl + '/user/get';\n        axios.post(url, {}, {\n            headers:{\n                authorization: token\n            }})\n            .then((response) => {\n                this.setState({\n                    user: response.data.user\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    handleSubmit = (event) => {\n        const url = apiConfig.serverUrl + '/sales/new';\n\n        event.preventDefault();\n\n        var files = event.target.filepond;\n        var filenames = files.map((file) => file.value);\n        var file;\n        for (file in event.target.filepond){\n            \n        }\n        console.log(\"File ids:\");\n        console.log(filenames);\n\n\n        axios.post(url,{\n            token: this.state.token,\n            title: this.state.title,\n            state: this.state.state,\n            firstPrice: this.state.firstPrice,\n            startDate: this.state.startDate,\n            city: this.state.city,\n            district: this.state.district,\n            files: this.state.files\n        }).then((response) => {\n\n        }).catch();\n    }\n    getLocations(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/locations';\n        axios.get(url)\n            .then((response) => {\n                this.setState({\n                    locations: response.data.locations,\n                    selectedCity: response.data.locations[0]\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            }.bind(this));\n    }\n\n    render() {\n        const cities = this.state.locations.map((location) =>\n            <option>{location.city}</option>\n        );\n        var location;\n        for (location in this.state.locations){\n            if (location.city === this.state.city){\n                this.setState({\n                    selectedCity: location\n                });\n            }\n        }\n        const districts = this.state.selectedCity.districts.map((district)=>\n            <option>{district}</option>\n        );\n\n        return (\n            <Layout page=\"sell\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <h2> Satış Başlat </h2>\n                    <hr/>\n                    <Form onSubmit={this.handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <FormGroup>\n                                    <Label for=\"title\">Başlık</Label>\n                                    <Input type=\"text\"\n                                           name=\"title\"\n                                           id=\"title\"\n                                           value={this.state.title}\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Ürününüzü tanımlayan birkaç kelime...\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"state\">Durum</Label>\n                                    <Input type=\"select\"\n                                           name=\"state\"\n                                           id=\"state\"\n                                           value={this.state.state}\n                                           onChange={this.handleInputChange}>\n                                        <option>Kullanılmamış</option>\n                                        <option>Yeni gibi</option>\n                                        <option>Az kullanılmış</option>\n                                        <option>Eski</option>\n                                        <option>Çok Eski</option>\n                                    </Input>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label for=\"firstPrice\">Başlangıç Fiyatı</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faLiraSign} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <Input type=\"number\"\n                                               name=\"firstPrice\"\n                                               value={this.state.firstPrice}\n                                               onChange={this.handleInputChange}\n                                               id=\"firstPrice\"\n                                               placeholder=\"Minimum satış fiyatını belirtin...\" />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"endDate\">Kapanış Tarihi</Label>\n                                    <InputGroup>\n                                        <InputGroupAddon addonType=\"prepend\">\n                                            <InputGroupText>\n                                                <FontAwesomeIcon icon={faCalendar} width=\"16\" />\n                                            </InputGroupText>\n                                        </InputGroupAddon>\n                                        <DatePicker\n                                            id=\"endDate\"\n                                            className=\"form-control\"\n                                            selected={this.state.startDate}\n                                            onChange={this.handleChange}\n                                            locale=\"tr\"\n                                        />\n                                    </InputGroup>\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label style={{textDecoration:'underline'}} for=\"location\">Konum</Label>\n                                    <div className=\"row\" id=\"location\">\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"city\">İl</Label>\n                                            <Input type=\"select\"\n                                                   name=\"city\"\n                                                   id=\"city\"\n                                                   value={this.state.city}\n                                                   onChange={this.handleInputChange}>\n                                                {cities}\n                                            </Input>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Label for=\"district\">İlçe</Label>\n                                            <Input type=\"select\"\n                                                   name=\"district\"\n                                                   id=\"district\"\n                                                   value={this.state.district}\n                                                    onChange={this.handleInputChange}>\n                                                {districts}\n                                            </Input>\n                                        </div>\n                                    </div>\n                                </FormGroup>\n                                <Button color=\"danger\"\n                                        size=\"lg\"\n                                        type=\"submit\"\n                                        block>\n                                    Satışı Başlat\n                                </Button>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <FormGroup>\n                                    <Label style={{display:'block'}} for=\"filepond\">Ürün fotoğrafları</Label>\n                                    <FilePond\n                                        id=\"filepond\"\n                                        files={this.state.files}\n                                        labelInvalidField=\"Sadece fotoğraf dosyaları yükleyebilirsiniz\"\n                                        labelIdle=\"Sürükleyip bırakın, veya bilgisayarınızdan yüklemek için tıklayın\"\n                                        labelTapToRetry=\"Yeniden denemek için tıklayın\"\n                                        labelFileProcessingError=\"Fotoğraf yüklenirken hata oluştu\"\n                                        labelFileProcessingComplete=\"Yükleme tamamlandı\"\n                                        labelTapToUndo=\"Geri almak için tıklayın\"\n                                        labelFileProcessing=\"Fotoğraf yükleniyor\"\n                                        labelTapToCancel=\"İptal etmek için tıklayın\"\n                                        allowMultiple={true}\n                                        maxFiles={5}\n                                        server={apiConfig.serverUrl + '/file/product'}\n                                        onupdatefiles={fileItems => {\n                                            // Set currently active file objects to this.state\n                                            this.setState({\n                                                files: fileItems.map(fileItem => fileItem.file)\n                                            });\n                                        }}\n                                    />\n                                </FormGroup>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSell.getInitialProps = async ctx => {\n    // Check user's session\n    const token = auth(ctx);\n\n    return { token }\n};\n\nexport default Sell;"]},"metadata":{},"sourceType":"module"}