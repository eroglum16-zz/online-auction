{"ast":null,"code":"var _jsxFileName = \"/Users/mert/Desktop/I\\u0307TU\\u0308/Fall 2019/Bitirme/Project/pages/registration.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport Router from 'next/router';\nimport ValidationError from \"../components/ValidationError\";\n\nconst bcrypt = require('bcryptjs');\n\nconst salt = bcrypt.genSaltSync(10);\n\nconst validator = require('../utils/validations');\n\nclass Registration extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameSurname: '',\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      validationErrors: {},\n      styles: {\n        email: {},\n        passwordConfirm: {}\n      },\n      alertMessage: ''\n    };\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let styles = this.state.styles;\n\n    if (name === 'email') {\n      if (value.length !== 0 && !validator.isEmail(value)) {\n        styles.email = {\n          border: 'none',\n          borderBottom: '2px solid #e33'\n        };\n      } else {\n        styles.email = {};\n      }\n    } else if (name === 'passwordConfirm') {\n      if (value.length !== 0 && value !== this.state.password) {\n        styles.passwordConfirm = {\n          border: 'none',\n          borderBottom: '2px solid #b00'\n        };\n      } else {\n        styles.passwordConfirm = {};\n      }\n    }\n\n    let errors = this.state.validationErrors;\n    errors[name] = '';\n    this.setState({\n      [name]: value,\n      styles: styles,\n      validationErrors: errors\n    });\n  }\n\n  handleRegistration() {\n    const apiConfig = require('../api-config');\n\n    const url = apiConfig.serverUrl + '/user/save';\n\n    if (this.state.password !== this.state.passwordConfirm) {\n      document.getElementById('password-confirm').style.border = '1px solid red';\n      return;\n    }\n\n    let pass = bcrypt.hashSync(this.state.password, salt);\n    let validated = this.validate();\n    if (!validated) return;\n    axios.post(url, {\n      nameSurname: this.state.nameSurname,\n      email: this.state.email,\n      password: pass\n    }).then(function (response) {\n      Router.push('/login?registered=true');\n    }).catch(function (error) {\n      this.setState({\n        alertMessage: error.response.data.message\n      });\n    }.bind(this));\n  }\n\n  validate() {\n    let validated = true;\n    let errors = this.state.validationErrors;\n\n    if (this.state.nameSurname.length < 5) {\n      validated = false;\n      errors.nameSurname = \"Ad soyad alanına daha uzun bir değer girmelisiniz.\";\n    } else if (this.state.nameSurname.length > 50) {\n      validated = false;\n      errors.nameSurname = \"Ad soyad en fazla 50 karakterdan oluşabilir.\";\n    }\n\n    if (!validator.isEmail(this.state.email)) {\n      validated = false;\n      errors.email = \"Geçerli bir email adresi girmediniz.\";\n    }\n\n    if (this.state.password !== this.state.passwordConfirm) {\n      validated = false;\n      errors.passwordConfirm = \"Şifreler eşleşmiyor.\";\n    }\n\n    if (!validated) this.setState({\n      validationErrors: errors,\n      password: '',\n      passwordConfirm: ''\n    });\n    return validated;\n  }\n\n  render() {\n    return __jsx(Layout, {\n      page: \"registration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container bg-white\",\n      style: {\n        padding: '3%',\n        marginTop: '3%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row justify-content-md-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.alertMessage.length > 0 ? __jsx(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.alertMessage) : '', __jsx(\"h2\", {\n      className: \"text-light bg-dark text-center rounded p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \" Kay\\u0131t Olun \"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, __jsx(Input, {\n      bsSize: \"lg\",\n      type: \"text\",\n      name: \"nameSurname\",\n      value: this.state.nameSurname,\n      onChange: this.handleInputChange,\n      id: \"nameSurname\",\n      placeholder: \"Ad\\u0131n\\u0131z\\u0131 ve soyad\\u0131n\\u0131z\\u0131 girin \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), __jsx(ValidationError, {\n      message: this.state.validationErrors.nameSurname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, __jsx(Input, {\n      bsSize: \"lg\",\n      style: this.state.styles.email,\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      id: \"email\",\n      placeholder: \"Email adresinizi girin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(Input, {\n      bsSize: \"lg\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      id: \"password\",\n      placeholder: \"Parola belirleyin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), __jsx(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, __jsx(Input, {\n      bsSize: \"lg\",\n      style: this.state.styles.passwordConfirm,\n      type: \"password\",\n      name: \"passwordConfirm\",\n      value: this.state.passwordConfirm,\n      onChange: this.handleInputChange,\n      id: \"password-confirm\",\n      placeholder: \"Parolan\\u0131z\\u0131 teyit edin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), __jsx(Button, {\n      color: \"secondary\",\n      size: \"lg\",\n      onClick: this.handleRegistration,\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Kayd\\u0131 Tamamla\")), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Zaten \\xFCye misiniz?\", __jsx(Link, {\n      href: '/login',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"text-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" Giri\\u015F yap\\u0131n\")))))));\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["/Users/mert/Desktop/İTÜ/Fall 2019/Bitirme/Project/pages/registration.js"],"names":["React","useState","Layout","Button","Form","FormGroup","Label","Input","FormText","Alert","Link","axios","Router","ValidationError","bcrypt","require","salt","genSaltSync","validator","Registration","Component","constructor","props","state","nameSurname","email","password","passwordConfirm","validationErrors","styles","alertMessage","handleRegistration","bind","handleInputChange","event","target","value","name","length","isEmail","border","borderBottom","errors","setState","apiConfig","url","serverUrl","document","getElementById","style","pass","hashSync","validated","validate","post","then","response","push","catch","error","data","message","render","padding","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport Router from 'next/router';\nimport ValidationError from \"../components/ValidationError\";\n\nconst bcrypt    = require('bcryptjs');\nconst salt      = bcrypt.genSaltSync(10);\nconst validator = require('../utils/validations');\n\nclass Registration extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameSurname: '',\n            email: '',\n            password: '',\n            passwordConfirm: '',\n            validationErrors: {},\n            styles: {\n                email: {},\n                passwordConfirm: {}\n            },\n            alertMessage: ''\n        };\n        this.handleRegistration = this.handleRegistration.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        let styles  = this.state.styles;\n        if (name === 'email'){\n            if(value.length !== 0 && !validator.isEmail(value)){\n                styles.email = {\n                    border: 'none',\n                    borderBottom: '2px solid #e33',\n                }\n            }else{\n                styles.email = {}\n            }\n        }else if(name === 'passwordConfirm'){\n            if(value.length !== 0 && (value !== this.state.password)){\n                styles.passwordConfirm = {\n                    border: 'none',\n                    borderBottom: '2px solid #b00',\n                }\n            }else{\n                styles.passwordConfirm = {}\n            }\n        }\n\n        let errors = this.state.validationErrors;\n        errors[name] = '';\n\n        this.setState({\n            [name]: value,\n            styles: styles,\n            validationErrors: errors\n        });\n    }\n    handleRegistration(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/user/save';\n        if (this.state.password !== this.state.passwordConfirm){\n            document.getElementById('password-confirm').style.border = '1px solid red';\n            return;\n        }\n        let pass = bcrypt.hashSync(this.state.password, salt);\n\n        let validated = this.validate();\n        if(!validated) return;\n        axios.post(url, {\n            nameSurname: this.state.nameSurname,\n            email: this.state.email,\n            password: pass\n        })\n            .then(function (response) {\n                Router.push('/login?registered=true');\n            })\n            .catch(function (error) {\n                this.setState({\n                    alertMessage: error.response.data.message\n                });\n            }.bind(this));\n    }\n    validate(){\n        let validated   = true;\n        let errors      = this.state.validationErrors;\n\n        if (this.state.nameSurname.length < 5){\n            validated = false;\n            errors.nameSurname = \"Ad soyad alanına daha uzun bir değer girmelisiniz.\"\n        }else if (this.state.nameSurname.length > 50){\n            validated = false;\n            errors.nameSurname = \"Ad soyad en fazla 50 karakterdan oluşabilir.\"\n        }\n\n        if(!validator.isEmail(this.state.email)){\n            validated = false;\n            errors.email = \"Geçerli bir email adresi girmediniz.\"\n        }\n\n        if(this.state.password !== this.state.passwordConfirm){\n            validated = false;\n            errors.passwordConfirm = \"Şifreler eşleşmiyor.\"\n        }\n\n        if (!validated)\n            this.setState({\n                validationErrors: errors,\n                password: '',\n                passwordConfirm: ''\n            });\n\n        return validated;\n    }\n    render() {\n        return (\n            <Layout page=\"registration\">\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            { this.state.alertMessage.length > 0 ?\n                            <Alert color=\"danger\">\n                                {this.state.alertMessage}\n                            </Alert>\n                                : ''\n                            }\n                            <h2 className=\"text-light bg-dark text-center rounded p-2\"> Kayıt Olun </h2>\n                            <hr/>\n                            <Form>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"text\"\n                                           name=\"nameSurname\"\n                                           value={this.state.nameSurname}\n                                           onChange={this.handleInputChange}\n                                           id=\"nameSurname\"\n                                           placeholder=\"Adınızı ve soyadınızı girin \" />\n                                    <ValidationError message={this.state.validationErrors.nameSurname} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           style={this.state.styles.email}\n                                           type=\"email\"\n                                           name=\"email\"\n                                           value={this.state.email}\n                                           onChange={this.handleInputChange}\n                                           id=\"email\"\n                                           placeholder=\"Email adresinizi girin\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"password\"\n                                           name=\"password\"\n                                           value={this.state.password}\n                                           onChange={this.handleInputChange}\n                                           id=\"password\"\n                                           placeholder=\"Parola belirleyin\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           style={this.state.styles.passwordConfirm}\n                                           type=\"password\"\n                                           name=\"passwordConfirm\"\n                                           value={this.state.passwordConfirm}\n                                           onChange={this.handleInputChange}\n                                           id=\"password-confirm\"\n                                           placeholder=\"Parolanızı teyit edin\" />\n                                </FormGroup>\n\n                                <Button color=\"secondary\"\n                                        size=\"lg\"\n                                        onClick={this.handleRegistration}\n                                        block>\n                                    Kaydı Tamamla\n                                </Button>\n                            </Form>\n                            <hr/>\n                            <p>Zaten üye misiniz?\n                                <Link href={'/login'} >\n                                    <a className=\"text-dark\"> Giriş yapın</a>\n                                </Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}