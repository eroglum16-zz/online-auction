{"version":3,"file":"static/webpack/static/development/pages/a/[id].js.769d933ed2b58f2fa436.hot-update.js","sources":["webpack:///./components/Countdown.js"],"sourcesContent":["import React from \"react\";\n\nclass CountdownNumber extends React.Component {\n    render() {\n        return (\n            <span style={{fontSize: '20px', fontFamily:'Verdana', display: 'block'}}>\n                {this.props.number}\n            </span>\n        );\n    }\n}\nclass CountdownTitle extends React.Component {\n    render() {\n        return (\n            <span style={{fontSize: '14px', fontFamily:'Courier New'}}>\n                {this.props.title}\n            </span>\n        );\n    }\n}\nclass CountdownBox extends React.Component {\n    render() {\n        return (\n            <div className=\"col-3 text-center\">\n                <CountdownNumber number={this.props.number} />\n                <CountdownTitle title={this.props.title} />\n            </div>\n        );\n    }\n}\nconst secondFactor  = 1000;\nconst minuteFactor  = 60 * secondFactor;\nconst hourFactor    = 60 * minuteFactor;\nconst dayFactor     = 24 * hourFactor;\nlet intervalId;\nclass Countdown extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = this.parseTime();\n    }\n    componentDidMount() {\n        intervalId = setInterval(() => {\n            this.setState(this.parseTime());\n        },1000);\n    }\n    componentWillUnmount() {\n        clearInterval(intervalId);\n    }\n    parseTime(){\n        let diff    = this.props.date ? this.props.date - Date.now() : 0;\n        let day     = parseInt(diff/dayFactor);\n\n        let hourCarry   = 24 * day;\n        let hour        = parseInt(diff/hourFactor - hourCarry);\n\n        let minuteCarry = (60 * 24 * day) + (60 * hour);\n        let minute      = parseInt(diff/minuteFactor - minuteCarry);\n\n        let secondCarry = (60 * 60 * 24 * day) + (60 * 60 * hour)\n        let second  = diff/secondFactor;\n        return {\n          day: day,\n          hour: hour,\n          minute: minute,\n          second: parseInt(second)\n        };\n    }\n    render() {\n        return (\n            <div className=\"row pr-2 pl-2\">\n                <CountdownBox number={this.state.day} title=\"GÜN\" />\n                <CountdownBox number={this.state.hour} title=\"SAAT\" />\n                <CountdownBox number={this.state.minute} title=\"DAKİKA\" />\n                <CountdownBox number={this.state.second} title=\"SANİYE\" />\n            </div>\n        );\n    }\n}\n\nexport default Countdown;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAPA;AACA;AAQA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAPA;AACA;AAQA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AARA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAzCA;AACA;AA2CA;;;;A","sourceRoot":""}