{"version":3,"file":"static/webpack/static/development/pages/registration.js.b8daa7e8def8865409a1.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js","webpack:///./pages/registration.js"],"sourcesContent":["import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithHoles(arr) {\n  if (_Array$isArray(arr)) return arr;\n}","import _getIterator from \"../../core-js/get-iterator\";\nexport default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = _getIterator(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import Layout from \"../components/AppLayout\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText, Alert } from 'reactstrap';\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport Router from 'next/router';\n\nvar bcrypt = require('bcryptjs');\nvar salt = bcrypt.genSaltSync(10);\n\nclass Registration extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameSurname: '',\n            email: '',\n            password: '',\n            passwordConfirm: ''\n        }\n        this.handleRegistration = this.handleRegistration.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n    handleRegistration(){\n        const apiConfig = require('../api-config');\n        const url = apiConfig.serverUrl + '/user';\n        if (this.state.password !== this.state.passwordConfirm){\n            document.getElementById('password-confirm').style.border = '1px solid red';\n            return;\n        }\n        var pass = bcrypt.hashSync(this.state.password, salt);\n        axios.post(url, {\n            nameSurname: this.state.nameSurname,\n            email: this.state.email,\n            password: pass\n        })\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error.response.data.message);\n            });\n        //Router.push('/login');\n    }\n    render() {\n        const [visible, setVisible] = useState(true);\n\n        const onDismiss = () => setVisible(false);\n        return (\n            <Layout page=\"registration\">\n                <div className=\"container bg-white\" style={{ padding:'3%', marginTop:'3%'}}>\n                    <div className=\"row justify-content-md-center\">\n                        <div className=\"col-md-4\">\n                            <h2 className=\"text-light bg-dark text-center rounded p-2\"> Kayıt Olun </h2>\n                            <hr/>\n                            <Form>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"text\"\n                                           name=\"nameSurname\"\n                                           value={this.state.nameSurname}\n                                           onChange={this.handleInputChange}\n                                           id=\"nameSurname\"\n                                           placeholder=\"Adınızı ve soyadınızı girin \" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"email\"\n                                           name=\"email\"\n                                           value={this.state.email}\n                                           onChange={this.handleInputChange}\n                                           id=\"email\"\n                                           placeholder=\"Email adresinizi girin\" />\n                                </FormGroup>\n                                <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>\n                                    This is a danger alert — check it out!\n                                </Alert>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"password\"\n                                           name=\"password\"\n                                           value={this.state.password}\n                                           onChange={this.handleInputChange}\n                                           id=\"password\"\n                                           placeholder=\"Parola belirleyin\" />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input bsSize=\"lg\"\n                                           type=\"password\"\n                                           name=\"passwordConfirm\"\n                                           value={this.state.passwordConfirm}\n                                           onChange={this.handleInputChange}\n                                           id=\"password-confirm\"\n                                           placeholder=\"Parolanızı teyit edin\" />\n                                </FormGroup>\n\n                                <Button color=\"secondary\"\n                                        size=\"lg\"\n                                        onClick={this.handleRegistration}\n                                        block>\n                                    Kaydı Tamamla\n                                </Button>\n                            </Form>\n                            <hr/>\n                            <p>Zaten üye misiniz?\n                                <Link href={'/login'} >\n                                    <a className=\"text-dark\"> Giriş yapın</a>\n                                </Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nexport default Registration;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AATA;AAUA;AACA;;;AAAA;AACA;AACA;AACA;AAEA;AAGA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAEA;AACA;AAEA;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAhHA;AACA;AAkHA;;;;A","sourceRoot":""}