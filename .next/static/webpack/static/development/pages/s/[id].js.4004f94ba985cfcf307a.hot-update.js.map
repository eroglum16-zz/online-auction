{"version":3,"file":"static/webpack/static/development/pages/s/[id].js.4004f94ba985cfcf307a.hot-update.js","sources":["webpack:///./components/ChatBox.js","webpack:///./pages/s/.js"],"sourcesContent":["import React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter} from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\n\n// RCE CSS\nimport 'react-chat-elements/dist/main.css';\n// MessageBox component\nimport { MessageList, Input, Button } from 'react-chat-elements';\n\nimport {serverUrl} from '../api-config';\n\nimport axios from 'axios';\n\n\nclass ChatBox extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: ''\n        };\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.handleEnter        = this.handleEnter.bind(this);\n        this.handleSendClick    = this.handleSendClick.bind(this);\n    }\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n\n        this.setState({\n            message: value,\n        });\n    }\n    handleEnter(event) {\n        if (event.key === 'Enter') {\n\n        }\n    }\n    handleSendClick(){\n\n    }\n    sendMessage(){\n        const url = serverUrl + '/message/new';\n        axios.post(url, {\n            text: this.state.message,\n            receiverEmail: this.props.receiverEmail,\n\n        },{\n            headers:{\n                authorization: this.props.userToken\n            }\n        }).then((response) => {\n            console.log(response.data);\n        }).catch((error) => {\n            throw error;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Card>\n                    <CardHeader className=\"bg-dark text-white\">\n                        {this.props.buyer}\n                        <span className=\"float-right\"> {this.props.salePrice}₺ </span>\n                    </CardHeader>\n                    <CardBody style={{minHeight: '400px'}}>\n                        <MessageList\n                            className='message-list'\n                            lockable={true}\n                            toBottomHeight={'100%'}\n                            dataSource={[\n                                {\n                                    position: 'right',\n                                    type: 'text',\n                                    className: 'mb-2',\n                                    text: 'Merhaba ürünü ne zaman alabilirsiniz? ',\n                                    date: new Date() - 100000,\n                                },\n                                {\n                                    position: 'left',\n                                    type: 'text',\n                                    text: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit',\n                                    date: new Date() - 10000,\n                                },\n                            ]} />\n                    </CardBody>\n                    <CardFooter className=\"bg-light\">\n                        <Input\n                            placeholder=\"Mesajınız...\"\n                            className=\"pl-2\"\n                            multiline={false}\n                            name=\"message\"\n                            value={this.state.message}\n                            onChange={this.handleInputChange}\n                            onKeyDown={this.handleEnter}\n                            rightButtons={\n                                <Button\n                                    color='white'\n                                    className='bg-dark col-2'\n                                    onClick={this.handleSendClick}\n                                    text={<FontAwesomeIcon icon={faPaperPlane} width=\"16\" />} />\n                            }/>\n                    </CardFooter>\n                </Card>\n\n            </div>\n        );\n    }\n}\n\nexport default ChatBox;","import Layout from '../../components/AppLayout';\nimport ChatBox from \"../../components/ChatBox\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLiraSign, faUser, faMoneyBill, faUsers, faThumbsUp, faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\nimport Link from \"next/link\";\nimport {auth, getUser} from \"../../utils/auth\";\nconst defaults = require('../../utils/defaults');\nconst apiConfig = require('../../api-config');\nimport {getSale} from \"../../utils/api\";\nimport {toTimeString} from \"../../utils/miscellaneous\";\nimport Router from 'next/router'\n\nclass Sale extends React.Component{\n    constructor(props) {\n        super(props);\n        let token = this.props.token;\n        this.state = {\n            loggedIn: !!token,\n            user: {},\n            sale: defaults.defaultSale,\n            maxBid: {\n                amount: 0,\n                bidder: {\n                    email: \"\",\n                    nameSurname: \"\"\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        getUser(this.props.token).then(user => {\n            this.setState({\n                user: user\n            });\n        });\n        getSale(this.props.id).then(response => {\n            if (!response){\n                Router.push('/sales');\n                return;\n            }\n            this.setState({\n                sale: response.sale,\n                maxBid: response.maxBid\n            });\n        });\n    }\n\n    render() {\n        const buyer = this.state.maxBid.bidder.nameSurname;\n        const salePrice = this.state.maxBid.amount;\n        return (\n            <Layout page=\"me\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\"\n                     style={{ padding:'3%', marginTop:'3%', boxShadow: '0px 10px 5px 0px #ccc'}} >\n                    <div className=\"row\">\n                        <div className=\"col-md-1\"></div>\n                        <div className=\"col-md-5\">\n                            <div className=\"mb-3\" style={{maxHeight: '400px', overflow: 'hidden'}}>\n                                <img src={apiConfig.productImageBase + this.state.sale.images[0]} width=\"100%\" />\n                            </div>\n                            <h4> {this.state.sale.title} </h4>\n                            <hr/>\n                            <div className=\"row mt-4\">\n\n                                <p className=\"col-md-6 \">\n                                    <FontAwesomeIcon icon={faUser} width=\"16\" /> <b>Alıcı: </b> {buyer}\n                                </p>\n                                <p className=\"col-md-6 \">\n                                    <FontAwesomeIcon icon={faMoneyBill} width=\"16\" /> <b>Satış Fiyatı: </b> {salePrice}₺\n                                </p>\n                                <p className=\"col-md-12 mb-4\">\n                                    <FontAwesomeIcon icon={faCalendarAlt} width=\"16\" /> <b>Kapanış Tarihi: </b>\n                                    {toTimeString(this.state.sale.endDate)}\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-md-1\"></div>\n                        <div className=\"col-md-5\">\n                            <ChatBox buyer={buyer}\n                                     saleId={this.state.sale._id}\n                                     salePrice={salePrice}\n                                     userToken={this.props.token}\n                                     receiverEmail={this.state.maxBid.bidder.email} />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nSale.getInitialProps = async ctx => {\n    const {id} = ctx.query;\n\n    // Check user's session\n    const token = auth(ctx);\n\n    return { id, token }\n};\n\nexport default Sale;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAPA;AAQA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AADA;AAGA;;;AACA;AACA;AAGA;;;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAJA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;;;;AA7FA;AACA;AA+FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAJA;AAHA;AAeA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AA5EA;AACA;AA8EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAJA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}