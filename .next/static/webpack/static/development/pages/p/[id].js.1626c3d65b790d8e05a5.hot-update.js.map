{"version":3,"file":"static/webpack/static/development/pages/p/[id].js.1626c3d65b790d8e05a5.hot-update.js","sources":["webpack:///./pages/p/.js"],"sourcesContent":["import Layout from '../../components/AppLayout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLiraSign, faUser, faMoneyBill, faUsers, faThumbsUp, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport {auth, getUser} from \"../../utils/auth\";\nimport {getSale} from \"../../utils/api\";\nimport Router from \"next/router\";\nimport {toTimeString} from \"../../utils/miscellaneous\";\nimport ChatBox from \"../../components/ChatBox\";\n\nconst apiConfig = require('../../api-config');\nconst defaults = require('../../utils/defaults');\n\nclass Purchase extends React.Component{\n    constructor(props) {\n        super(props);\n        let token = this.props.token;\n        this.state = {\n            loggedIn: !!token,\n            user: {},\n            sale: defaults.defaultSale,\n            maxBid: {\n                amount: 0,\n                bidder: {\n                    email: \"\",\n                    nameSurname: \"\"\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        getUser(this.props.token).then(user => {\n            this.setState({\n                user: user\n            });\n        });\n        getSale(this.props.id).then(response => {\n            if (!response){\n                Router.push('/purchases');\n                return;\n            }\n            if(response.maxBid.bidder.email !== this.state.user.email){\n                Router.push('/purchases');\n            }\n            this.setState({\n                sale: response.sale,\n                maxBid: response.maxBid\n            });\n        });\n    }\n    render() {\n        const seller = this.state.sale.owner.nameSurname;\n        const salePrice = this.state.maxBid.amount;\n        return (\n            <Layout page=\"me\" user={this.state.user} loggedIn={this.state.loggedIn}>\n                <div className=\"container bg-white\"\n                     style={{ padding:'3%', marginTop:'3%', boxShadow: '0px 10px 5px 0px #ccc'}} >\n                    <div className=\"row\">\n                        <div className=\"col-md-1\"></div>\n                        <div className=\"col-md-5\">\n                            <div className=\"mb-3\" style={{maxHeight: '400px', overflow: 'hidden'}}>\n                                <img src={apiConfig.productImageBase + this.state.sale.images[0]} width=\"100%\" />\n                            </div>\n                            <h4> {this.state.sale.title} </h4>\n                            <hr/>\n                            <div className=\"row mt-4\">\n\n                                <p className=\"col-md-6 \">\n                                    <FontAwesomeIcon icon={faUser} width=\"16\" /> <b>Satıcı: </b> {seller}\n                                </p>\n                                <p className=\"col-md-6 \">\n                                    <FontAwesomeIcon icon={faMoneyBill} width=\"16\" /> <b>Alış Fiyatı: </b> {salePrice}₺\n                                </p>\n                                <p className=\"col-md-12 mb-4\">\n                                    <FontAwesomeIcon icon={faCalendarAlt} width=\"16\" /> <b>Kapanış Tarihi: </b>\n                                    {toTimeString(this.state.sale.endDate)}\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"col-md-1\"></div>\n                        <div className=\"col-md-5\">\n                            <ChatBox interlocutor={seller}\n                                     saleId={this.state.sale._id}\n                                     salePrice={salePrice}\n                                     userToken={this.props.token}\n                                     userEmail={this.state.user.email}\n                                     receiverEmail={this.state.maxBid.bidder.email} />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}\n\nPurchase.getInitialProps = async ctx => {\n    const {id} = ctx.query;\n\n    // Check user's session\n    const token = auth(ctx);\n\n    return { id, token }\n};\n\nexport default Purchase;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAJA;AAHA;AAeA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AA/EA;AACA;AAiFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAJA;AAMA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAQA;;;;A","sourceRoot":""}